{"version":3,"file":"NFTCreator.js","sources":["../../../../src/nft/components/mint/NFTCreator.tsx"],"sourcesContent":["import { Avatar, Badge, Identity, Name } from '@/identity';\nimport { useNFTContext } from '@/nft/components/NFTProvider';\nimport { cn } from '@/styles/theme';\nimport { useOnchainKit } from '@/useOnchainKit';\n\ntype NFTCreatorReact = {\n  className?: string;\n};\n\nexport function NFTCreator({ className }: NFTCreatorReact) {\n  const { schemaId } = useOnchainKit();\n  const { creatorAddress } = useNFTContext();\n\n  if (!creatorAddress) {\n    return null;\n  }\n\n  return (\n    <div className={cn('-my-1 flex justify-between', className)}>\n      <Identity\n        className=\"px-0 py-0 [&>div]:space-x-2\"\n        address={creatorAddress}\n        schemaId={schemaId}\n      >\n        <Avatar className=\"h-4 w-4\" />\n        <Name>\n          <Badge />\n        </Name>\n      </Identity>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASO,SAAS,WAAW,EAAE,aAA8B;AACzD,QAAM,EAAE,SAAA,IAAa,cAAA;AACrB,QAAM,EAAE,eAAA,IAAmB,cAAA;AAE3B,MAAI,CAAC,gBAAgB;AACnB,WAAO;AAAA,EACT;AAEA,gCACG,OAAA,EAAI,WAAW,GAAG,8BAA8B,SAAS,GACxD,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAU;AAAA,MACV,SAAS;AAAA,MACT;AAAA,MAEA,UAAA;AAAA,QAAA,uBAAC,QAAA,EAAO,WAAU,UAAA,GAAlB,QAAA,OAAA;AAAA,UAAA,UAAA;AAAA,UAAA,YAAA;AAAA,UAAA,cAAA;AAAA,QAAA,GAAA,IAA4B;AAAA,QAC5B,uBAAC,MAAA,EACC,UAAA,uBAAC,OAAA,CAAA,GAAD,QAAA,OAAA;AAAA,UAAA,UAAA;AAAA,UAAA,YAAA;AAAA,UAAA,cAAA;AAAA,QAAA,GAAA,IAAO,EAAA,GADT,QAAA,OAAA;AAAA,UAAA,UAAA;AAAA,UAAA,YAAA;AAAA,UAAA,cAAA;AAAA,QAAA,GAAA,IAEA;AAAA,MAAA;AAAA,IAAA;AAAA,IARF;AAAA,IAAA;AAAA,IAAA;AAAA,MAAA,UAAA;AAAA,MAAA,YAAA;AAAA,MAAA,cAAA;AAAA,IAAA;AAAA,IAAA;AAAA,EAAA,EASA,GAVF,QAAA,OAAA;AAAA,IAAA,UAAA;AAAA,IAAA,YAAA;AAAA,IAAA,cAAA;AAAA,EAAA,GAAA,IAWA;AAEJ;"}