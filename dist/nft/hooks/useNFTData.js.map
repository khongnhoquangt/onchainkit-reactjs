{"version":3,"file":"useNFTData.js","sources":["../../../src/nft/hooks/useNFTData.ts"],"sourcesContent":["import type { ContractType, NFTError } from '@/api/types';\nimport { RequestContext } from '@/core/network/constants';\nimport { convertIpfsToHttps } from '@/nft/utils/ipfs';\nimport { useEffect, useState } from 'react';\nimport { useNFTLifecycleContext } from '../components/NFTLifecycleProvider';\nimport type { NFTData } from '../types';\nimport { useTokenDetails } from './useTokenDetails';\n\nexport function useNFTData(\n  contractAddress: `0x${string}`,\n  tokenId?: string,\n): NFTData | NFTError {\n  const { updateLifecycleStatus } = useNFTLifecycleContext();\n  const [error, setError] = useState<NFTError | null>(null);\n\n  useEffect(() => {\n    if (error) {\n      updateLifecycleStatus({\n        statusName: 'error',\n        statusData: error,\n      });\n    }\n  }, [error, updateLifecycleStatus]);\n\n  const { error: tokenError, data: tokenDetails } = useTokenDetails(\n    {\n      contractAddress,\n      tokenId: tokenId,\n    },\n    RequestContext.NFT,\n  );\n\n  if (tokenError && !error) {\n    setError({\n      code: 'NmND01',\n      message: tokenError.message,\n      error: 'Error fetching NFT data',\n    });\n    return tokenError;\n  }\n\n  return {\n    name: tokenDetails?.name,\n    description: tokenDetails?.description,\n    imageUrl: convertIpfsToHttps(tokenDetails?.imageUrl),\n    animationUrl: convertIpfsToHttps(tokenDetails?.animationUrl),\n    mimeType: tokenDetails?.mimeType,\n    ownerAddress: tokenDetails?.ownerAddress as `0x${string}`,\n    lastSoldPrice: tokenDetails?.lastSoldPrice,\n    contractType: tokenDetails?.contractType as ContractType,\n  };\n}\n"],"names":[],"mappings":";;;;;AAQO,SAAS,WACd,iBACA,SACoB;AACpB,QAAM,EAAE,sBAAA,IAA0B,uBAAA;AAClC,QAAM,CAAC,OAAO,QAAQ,IAAI,SAA0B,IAAI;AAExD,YAAU,MAAM;AACd,QAAI,OAAO;AACT,4BAAsB;AAAA,QACpB,YAAY;AAAA,QACZ,YAAY;AAAA,MAAA,CACb;AAAA,IACH;AAAA,EACF,GAAG,CAAC,OAAO,qBAAqB,CAAC;AAEjC,QAAM,EAAE,OAAO,YAAY,MAAM,iBAAiB;AAAA,IAChD;AAAA,MACE;AAAA,MACA;AAAA,IAAA;AAAA,IAEF,eAAe;AAAA,EAAA;AAGjB,MAAI,cAAc,CAAC,OAAO;AACxB,aAAS;AAAA,MACP,MAAM;AAAA,MACN,SAAS,WAAW;AAAA,MACpB,OAAO;AAAA,IAAA,CACR;AACD,WAAO;AAAA,EACT;AAEA,SAAO;AAAA,IACL,MAAM,6CAAc;AAAA,IACpB,aAAa,6CAAc;AAAA,IAC3B,UAAU,mBAAmB,6CAAc,QAAQ;AAAA,IACnD,cAAc,mBAAmB,6CAAc,YAAY;AAAA,IAC3D,UAAU,6CAAc;AAAA,IACxB,cAAc,6CAAc;AAAA,IAC5B,eAAe,6CAAc;AAAA,IAC7B,cAAc,6CAAc;AAAA,EAAA;AAEhC;"}