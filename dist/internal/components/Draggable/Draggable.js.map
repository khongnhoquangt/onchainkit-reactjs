{"version":3,"file":"Draggable.js","sources":["../../../../src/internal/components/Draggable/Draggable.tsx"],"sourcesContent":["'use client';\n\n// import { zIndex } from '@/styles/constants';\nimport { cn } from '@/styles/theme';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { getBoundedPosition } from './getBoundedPosition';\nimport { useRespositionOnWindowResize } from './useRepositionOnResize';\n\ntype DraggableProps = {\n  children: React.ReactNode;\n  gridSize?: number;\n  startingPosition?: { x: number; y: number };\n  snapToGrid?: boolean;\n  disabled?: boolean;\n};\n\nexport function Draggable({\n  children,\n  gridSize = 1,\n  startingPosition = { x: 20, y: 20 },\n  snapToGrid = false,\n  disabled = false,\n}: DraggableProps) {\n  const [position, setPosition] = useState(startingPosition);\n  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });\n  const [dragStartPosition, setDragStartPosition] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const draggableRef = useRef<HTMLDivElement>(null);\n\n  const calculateSnapToGrid = useCallback(\n    (positionValue: number) => {\n      return Math.round(positionValue / gridSize) * gridSize;\n    },\n    [gridSize],\n  );\n\n  const handleDragStart = useCallback(\n    (e: React.PointerEvent) => {\n      if (disabled) {\n        return;\n      }\n\n      setIsDragging(true);\n      setDragStartPosition({ x: e.clientX, y: e.clientY });\n      setDragOffset({\n        x: e.clientX - position.x,\n        y: e.clientY - position.y,\n      });\n    },\n    [position, disabled],\n  );\n\n  useEffect(() => {\n    if (!isDragging) {\n      return;\n    }\n\n    const handleGlobalMove = (e: PointerEvent) => {\n      const newPosition = getBoundedPosition({\n        draggableRef,\n        position: {\n          x: e.clientX - dragOffset.x,\n          y: e.clientY - dragOffset.y,\n        },\n      });\n      setPosition(newPosition);\n    };\n\n    const handleGlobalEnd = (e: PointerEvent) => {\n      const moveDistance = Math.hypot(\n        e.clientX - dragStartPosition.x,\n        e.clientY - dragStartPosition.y,\n      );\n\n      if (moveDistance > 2) {\n        e.preventDefault();\n        e.stopPropagation();\n        const clickEvent = (e2: MouseEvent) => {\n          e2.preventDefault();\n          e2.stopPropagation();\n          document.removeEventListener('click', clickEvent, true);\n        };\n        document.addEventListener('click', clickEvent, true);\n      }\n\n      setPosition((prev) => ({\n        x: snapToGrid ? calculateSnapToGrid(prev.x) : prev.x,\n        y: snapToGrid ? calculateSnapToGrid(prev.y) : prev.y,\n      }));\n      setIsDragging(false);\n    };\n\n    document.addEventListener('pointermove', handleGlobalMove);\n    document.addEventListener('pointerup', handleGlobalEnd);\n\n    return () => {\n      document.removeEventListener('pointermove', handleGlobalMove);\n      document.removeEventListener('pointerup', handleGlobalEnd);\n    };\n  }, [\n    isDragging,\n    dragOffset,\n    snapToGrid,\n    calculateSnapToGrid,\n    dragStartPosition,\n  ]);\n\n  useRespositionOnWindowResize(draggableRef, position, setPosition);\n\n  return (\n    <div\n      ref={draggableRef}\n      data-testid=\"ockDraggable\"\n      className={cn(\n        'fixed touch-none select-none',\n        'cursor-grab active:cursor-grabbing',\n      )}\n      style={{\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n      }}\n      onPointerDown={handleDragStart}\n    >\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}