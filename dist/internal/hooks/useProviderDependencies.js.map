{"version":3,"file":"useProviderDependencies.js","sources":["../../../src/internal/hooks/useProviderDependencies.tsx"],"sourcesContent":["import { type QueryClient, useQueryClient } from '@tanstack/react-query';\nimport { useMemo } from 'react';\nimport { type Config, WagmiProviderNotFoundError, useConfig } from 'wagmi';\n\n/** useProviderDependencies will return the provided Wagmi configuration and QueryClient if they exist in the React context, otherwise it will return null\n * NotFound errors will fail gracefully\n * Unexpected errors will be logged to the console as an error, and will return null for the problematic dependency\n */\nexport function useProviderDependencies() {\n  /** Check the context for WagmiProvider\n   * Wagmi configuration defaults to the provided config if it exists\n   * Otherwise, use the OnchainKit-provided Wagmi configuration\n   */\n  let providedWagmiConfig: Config | null = null;\n  let providedQueryClient: QueryClient | null = null;\n\n  try {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    providedWagmiConfig = useConfig();\n  } catch (error) {\n    if (!(error instanceof WagmiProviderNotFoundError)) {\n      console.error('Error fetching WagmiProvider, using default:', error);\n    }\n  }\n\n  try {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    providedQueryClient = useQueryClient();\n  } catch (error) {\n    if (\n      !(\n        (error as Error).message ===\n        'No QueryClient set, use QueryClientProvider to set one'\n      )\n    ) {\n      console.error('Error fetching QueryClient, using default:', error);\n    }\n  }\n\n  return useMemo(() => {\n    return {\n      providedWagmiConfig,\n      providedQueryClient,\n    };\n  }, [providedWagmiConfig, providedQueryClient]);\n}\n"],"names":[],"mappings":";;;AAQO,SAAS,0BAA0B;AAKxC,MAAI,sBAAqC;AACzC,MAAI,sBAA0C;AAE9C,MAAI;AAEF,0BAAsB,UAAA;AAAA,EACxB,SAAS,OAAO;AACd,QAAI,EAAE,iBAAiB,6BAA6B;AAClD,cAAQ,MAAM,gDAAgD,KAAK;AAAA,IACrE;AAAA,EACF;AAEA,MAAI;AAEF,0BAAsB,eAAA;AAAA,EACxB,SAAS,OAAO;AACd,QACE,EACG,MAAgB,YACjB,2DAEF;AACA,cAAQ,MAAM,8CAA8C,KAAK;AAAA,IACnE;AAAA,EACF;AAEA,SAAO,QAAQ,MAAM;AACnB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ,GAAG,CAAC,qBAAqB,mBAAmB,CAAC;AAC/C;"}