{"version":3,"file":"FundCardPaymentMethodDropdown.js","sources":["../../../src/fund/components/FundCardPaymentMethodDropdown.tsx"],"sourcesContent":["'use client';\nimport { isApplePaySupported } from '@/buy/utils/isApplePaySupported';\nimport { Skeleton } from '@/internal/components/Skeleton';\nimport { useOutsideClick } from '@/internal/hooks/useOutsideClick';\nimport { formatFiatAmount } from '@/internal/utils/formatFiatAmount';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { background, border, cn } from '../../styles/theme';\nimport type {\n  FundCardPaymentMethodDropdownPropsReact,\n  PaymentMethod,\n} from '../types';\nimport { FundCardPaymentMethodSelectRow } from './FundCardPaymentMethodSelectRow';\nimport { FundCardPaymentMethodSelectorToggle } from './FundCardPaymentMethodSelectorToggle';\nimport { useFundContext } from './FundCardProvider';\n\nexport function FundCardPaymentMethodDropdown({\n  className,\n}: FundCardPaymentMethodDropdownPropsReact) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const {\n    selectedPaymentMethod,\n    setSelectedPaymentMethod,\n    paymentMethods,\n    fundAmountFiat,\n    isPaymentMethodsLoading,\n    currency,\n  } = useFundContext();\n\n  const { sendAnalytics } = useAnalytics();\n\n  const filteredPaymentMethods = useMemo(() => {\n    return paymentMethods.filter(\n      (method) => method.id !== 'APPLE_PAY' || isApplePaySupported(),\n    );\n  }, [paymentMethods]);\n\n  const getPaymentMethodDisabledReason = useCallback(\n    (method: PaymentMethod) => {\n      const amount = Number(fundAmountFiat);\n\n      if (method.minAmount && amount < method.minAmount) {\n        return `Minimum amount of ${formatFiatAmount({\n          amount: method.minAmount,\n          currency: currency,\n          minimumFractionDigits: 0,\n        })} required`;\n      }\n\n      if (method.maxAmount && amount > method.maxAmount) {\n        return `Maximum amount allowed is ${formatFiatAmount({\n          amount: method.maxAmount,\n          currency: currency,\n          minimumFractionDigits: 0,\n        })}`;\n      }\n\n      return undefined;\n    },\n    [fundAmountFiat, currency],\n  );\n\n  const isPaymentMethodDisabled = useCallback(\n    (method: PaymentMethod) => {\n      if (!fundAmountFiat) {\n        return false;\n      }\n\n      return Boolean(getPaymentMethodDisabledReason(method));\n    },\n    [fundAmountFiat, getPaymentMethodDisabledReason],\n  );\n\n  // If current selected method becomes disabled, switch to Coinbase\n  useEffect(() => {\n    if (\n      selectedPaymentMethod &&\n      isPaymentMethodDisabled(selectedPaymentMethod)\n    ) {\n      const coinbaseMethod = paymentMethods.find((m) => m.id === '');\n      if (coinbaseMethod) {\n        setSelectedPaymentMethod(coinbaseMethod);\n      }\n    }\n  }, [\n    selectedPaymentMethod,\n    paymentMethods,\n    setSelectedPaymentMethod,\n    isPaymentMethodDisabled,\n  ]);\n\n  const handlePaymentMethodSelect = useCallback(\n    (paymentMethod: PaymentMethod) => {\n      if (!isPaymentMethodDisabled(paymentMethod)) {\n        sendAnalytics(FundEvent.FundOptionSelected, {\n          option: paymentMethod.id,\n        });\n        setSelectedPaymentMethod(paymentMethod);\n        setIsOpen(false);\n      }\n    },\n    [setSelectedPaymentMethod, isPaymentMethodDisabled, sendAnalytics],\n  );\n\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const dropdownContainerRef = useRef<HTMLDivElement>(null);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  useOutsideClick(dropdownContainerRef, () => {\n    if (isOpen) {\n      setIsOpen(false);\n    }\n  });\n\n  const handleEscKeyPress = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Escape') {\n        setIsOpen(false);\n      }\n    },\n    [],\n  );\n\n  const paymentMethod = selectedPaymentMethod || filteredPaymentMethods[0];\n\n  return (\n    <div\n      className={cn('relative py-4', className)}\n      ref={dropdownContainerRef}\n      data-testid=\"ockFundCardPaymentMethodDropdownContainer\"\n      onKeyUp={handleEscKeyPress}\n    >\n      {isPaymentMethodsLoading || !paymentMethod ? (\n        <Skeleton className=\"h-12 w-full\" />\n      ) : (\n        <FundCardPaymentMethodSelectorToggle\n          ref={buttonRef}\n          onClick={handleToggle}\n          isOpen={isOpen}\n          paymentMethod={paymentMethod}\n        />\n      )}\n      {isOpen && (\n        <div\n          ref={dropdownRef}\n          data-testid=\"ockFundCardPaymentMethodDropdown\"\n          className={cn(\n            border.radius,\n            border.lineDefault,\n            'ock-scrollbar absolute z-10 mt-2 flex w-full flex-col overflow-y-hidden',\n          )}\n        >\n          <div className={cn(background.default, 'overflow-y-auto p-2')}>\n            {filteredPaymentMethods.map((paymentMethod) => {\n              const isDisabled = isPaymentMethodDisabled(paymentMethod);\n              return (\n                <FundCardPaymentMethodSelectRow\n                  key={paymentMethod.name}\n                  testId={`ockFundCardPaymentMethodSelectRow__${paymentMethod.id}`}\n                  paymentMethod={paymentMethod}\n                  onClick={handlePaymentMethodSelect}\n                  disabled={isDisabled}\n                  disabledReason={getPaymentMethodDisabledReason(paymentMethod)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["paymentMethod"],"mappings":"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"}