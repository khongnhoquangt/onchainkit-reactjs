{"version":3,"file":"validateQuote.js","sources":["../../../src/buy/utils/validateQuote.ts"],"sourcesContent":["import type { GetSwapQuoteResponse } from '@/api/types';\nimport type { LifecycleStatusUpdate } from '@/internal/types';\nimport type { LifecycleStatus, SwapUnit } from '@/swap/types';\nimport { isSwapError } from '../../swap/utils/isSwapError';\n\ntype ValidateQuoteParams = {\n  responseETH?: GetSwapQuoteResponse;\n  responseUSDC?: GetSwapQuoteResponse;\n  responseFrom?: GetSwapQuoteResponse;\n  updateLifecycleStatus: (\n    status: LifecycleStatusUpdate<LifecycleStatus>,\n  ) => void;\n  to: SwapUnit;\n};\n\nexport function validateQuote({\n  to,\n  responseETH,\n  responseUSDC,\n  responseFrom,\n  updateLifecycleStatus,\n}: ValidateQuoteParams) {\n  if (!isSwapError(responseETH) && responseETH?.toAmountUSD) {\n    to.setAmountUSD(responseETH?.toAmountUSD);\n  } else if (!isSwapError(responseUSDC) && responseUSDC?.toAmountUSD) {\n    to.setAmountUSD(responseUSDC.toAmountUSD);\n  } else if (!isSwapError(responseFrom) && responseFrom?.toAmountUSD) {\n    to.setAmountUSD(responseFrom.toAmountUSD);\n  } else {\n    updateLifecycleStatus({\n      statusName: 'error',\n      statusData: {\n        code: 'TmBPc01',\n        error: 'No valid quote found',\n        message: '',\n      },\n    });\n    return { isValid: false };\n  }\n  return { isValid: true };\n}\n"],"names":[],"mappings":";AAeO,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAwB;AACtB,MAAI,CAAC,YAAY,WAAW,MAAK,2CAAa,cAAa;AACzD,OAAG,aAAa,2CAAa,WAAW;AAAA,EAC1C,WAAW,CAAC,YAAY,YAAY,MAAK,6CAAc,cAAa;AAClE,OAAG,aAAa,aAAa,WAAW;AAAA,EAC1C,WAAW,CAAC,YAAY,YAAY,MAAK,6CAAc,cAAa;AAClE,OAAG,aAAa,aAAa,WAAW;AAAA,EAC1C,OAAO;AACL,0BAAsB;AAAA,MACpB,YAAY;AAAA,MACZ,YAAY;AAAA,QACV,MAAM;AAAA,QACN,OAAO;AAAA,QACP,SAAS;AAAA,MAAA;AAAA,IACX,CACD;AACD,WAAO,EAAE,SAAS,MAAA;AAAA,EACpB;AACA,SAAO,EAAE,SAAS,KAAA;AACpB;"}