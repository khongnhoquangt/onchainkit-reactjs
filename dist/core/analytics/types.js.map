{"version":3,"file":"types.js","sources":["../../../src/core/analytics/types.ts"],"sourcesContent":["import type { Hex } from 'viem';\n\n/**\n * Wallet component events - Tracks all possible wallet interaction states\n * Used to monitor wallet connection flow and user interactions\n */\nexport enum WalletEvent {\n  /** Wallet connection fails */\n  ConnectError = 'walletConnectError',\n  /** User clicks connect wallet button */\n  ConnectInitiated = 'walletConnectInitiated',\n  /** Wallet successfully connected */\n  ConnectSuccess = 'walletConnectSuccess',\n  /** User disconnects wallet */\n  Disconnect = 'walletDisconnect',\n  /** User selects a wallet option */\n  OptionSelected = 'walletOptionSelected',\n  /** User cancels wallet connection */\n  ConnectCanceled = 'walletConnectCanceled',\n}\n\n/**\n * Wallet option - Available actions in the wallet interface\n * Used to track which wallet features users interact with\n */\nexport enum WalletOption {\n  Buy = 'buy',\n  Explorer = 'explorer',\n  QR = 'qr',\n  Refresh = 'refresh',\n  Send = 'send',\n  Swap = 'swap',\n}\n\n/**\n * Swap component events\n */\nexport enum SwapEvent {\n  SlippageChanged = 'swapSlippageChanged',\n  TokenSelected = 'swapTokenSelected',\n  SwapSuccess = 'swapSuccess',\n  SwapInitiated = 'swapInitiated',\n  SwapFailure = 'swapFailure',\n  SwapCanceled = 'swapCanceled',\n}\n\n/**\n * Buy option - Available payment methods for buying\n * Used to track which payment method users select\n */\nexport enum BuyOption {\n  APPLE_PAY = 'apple_pay',\n  COINBASE = 'coinbase_account',\n  DEBIT_CARD = 'debit_card',\n  ETH = 'eth',\n  USDC = 'usdc',\n}\n\n/**\n * Buy component events\n */\nexport enum BuyEvent {\n  BuyFailure = 'buyFailure',\n  BuyInitiated = 'buyInitiated',\n  BuyOptionSelected = 'buyOptionSelected',\n  BuySuccess = 'buySuccess',\n  BuyCanceled = 'buyCanceled',\n}\n\n/**\n * Checkout component events\n */\nexport enum CheckoutEvent {\n  CheckoutFailure = 'checkoutFailure',\n  CheckoutInitiated = 'checkoutInitiated',\n  CheckoutSuccess = 'checkoutSuccess',\n  CheckoutCanceled = 'checkoutCanceled',\n}\n\n/**\n * Mint component events\n */\nexport enum MintEvent {\n  MintFailure = 'mintFailure',\n  MintInitiated = 'mintInitiated',\n  MintQuantityChanged = 'mintQuantityChanged',\n  MintSuccess = 'mintSuccess',\n  MintCanceled = 'mintCanceled',\n}\n\n/**\n * Transaction component events\n */\nexport enum TransactionEvent {\n  TransactionFailure = 'transactionFailure',\n  TransactionInitiated = 'transactionInitiated',\n  TransactionSuccess = 'transactionSuccess',\n  TransactionCanceled = 'transactionCanceled',\n}\n\n/**\n * Fund component events\n */\nexport enum FundEvent {\n  FundAmountChanged = 'fundAmountChanged',\n  FundFailure = 'fundFailure',\n  FundInitiated = 'fundInitiated',\n  FundOptionSelected = 'fundOptionSelected',\n  FundSuccess = 'fundSuccess',\n  FundCanceled = 'fundCanceled',\n}\n\n/**\n * Earn component events\n */\nexport enum EarnEvent {\n  EarnDepositInitiated = 'earnDepositInitiated',\n  EarnDepositSuccess = 'earnDepositSuccess',\n  EarnDepositFailure = 'earnDepositFailure',\n  EarnDepositCanceled = 'earnDepositCanceled',\n  EarnWithdrawInitiated = 'earnWithdrawInitiated',\n  EarnWithdrawSuccess = 'earnWithdrawSuccess',\n  EarnWithdrawFailure = 'earnWithdrawFailure',\n  EarnWithdrawCanceled = 'earnWithdrawCanceled',\n}\n\n/**\n * Appchain component events\n */\nexport enum AppchainEvent {\n  AppchainBridgeDepositInitiated = 'appchainBridgeDepositInitiated',\n  AppchainBridgeDepositSuccess = 'appchainBridgeDepositSuccess',\n  AppchainBridgeDepositFailure = 'appchainBridgeDepositFailure',\n  AppchainBridgeWithdrawInitiated = 'appchainBridgeWithdrawInitiated',\n  AppchainBridgeWithdrawSuccess = 'appchainBridgeWithdrawSuccess',\n  AppchainBridgeWithdrawFailure = 'appchainBridgeWithdrawFailure',\n  AppchainBridgeWaitForClaimFailure = 'appchainBridgeWaitForClaimFailure',\n  AppchainBridgeClaimSuccess = 'appchainBridgeClaimSuccess',\n  AppchainBridgeClaimFailure = 'appchainBridgeClaimFailure',\n}\n\n/**\n * Generic error events across components\n * Used for error tracking and monitoring\n */\nexport enum ErrorEvent {\n  ComponentError = 'componentError',\n}\n\n/**\n * Analytics event types\n * Combines all possible event types\n */\nexport type AnalyticsEvent =\n  | AppchainEvent\n  | WalletEvent\n  | SwapEvent\n  | BuyEvent\n  | CheckoutEvent\n  | MintEvent\n  | TransactionEvent\n  | FundEvent\n  | EarnEvent\n  | ErrorEvent;\n\n/**\n * Common analytics data included in all events\n * Provides basic context for every tracked event\n */\nexport type CommonAnalyticsData = {\n  /** Unique identifier for user session */\n  sessionId?: string;\n  timestamp?: number;\n};\n\nexport type AppchainEventData = {\n  [AppchainEvent.AppchainBridgeDepositInitiated]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeDepositSuccess]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeDepositFailure]: CommonAnalyticsData & {\n    error: string;\n  };\n  [AppchainEvent.AppchainBridgeWithdrawInitiated]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeWithdrawSuccess]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeWithdrawFailure]: CommonAnalyticsData & {\n    error: string;\n  };\n  [AppchainEvent.AppchainBridgeWaitForClaimFailure]: CommonAnalyticsData & {\n    transactionHash: Hex;\n  };\n  [AppchainEvent.AppchainBridgeClaimSuccess]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n  };\n  [AppchainEvent.AppchainBridgeClaimFailure]: CommonAnalyticsData & {\n    error: string;\n  };\n};\n\nexport type WalletEventData = {\n  [WalletEvent.ConnectInitiated]: CommonAnalyticsData & {\n    /** Component used to connect wallet */\n    component: string;\n  };\n  [WalletEvent.ConnectError]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [WalletEvent.ConnectSuccess]: CommonAnalyticsData & {\n    address: string;\n    /** Coinbase, Metamask, Phantom, etc. */\n    walletProvider: string;\n  };\n  [WalletEvent.Disconnect]: CommonAnalyticsData & {\n    component: string;\n    walletProvider: string;\n  };\n  [WalletEvent.OptionSelected]: CommonAnalyticsData & {\n    option: WalletOption;\n  };\n  [WalletEvent.ConnectCanceled]: CommonAnalyticsData;\n};\n\nexport type SwapEventData = {\n  [SwapEvent.SlippageChanged]: CommonAnalyticsData & {\n    previousSlippage: number;\n    slippage: number;\n  };\n  [SwapEvent.TokenSelected]: CommonAnalyticsData & {\n    token: string;\n  };\n  [SwapEvent.SwapSuccess]: CommonAnalyticsData & {\n    paymaster: boolean;\n    transactionHash: string;\n    address: string;\n    amount: number;\n    from: string;\n    to: string;\n  };\n  [SwapEvent.SwapFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [SwapEvent.SwapInitiated]: CommonAnalyticsData & {\n    amount: number;\n  };\n  [SwapEvent.SwapCanceled]: CommonAnalyticsData;\n};\n\nexport type BuyEventData = {\n  [BuyEvent.BuyFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [BuyEvent.BuyInitiated]: CommonAnalyticsData & {\n    amount: number | undefined;\n    token: string | undefined;\n  };\n  [BuyEvent.BuyOptionSelected]: CommonAnalyticsData & {\n    option: BuyOption | undefined;\n  };\n  [BuyEvent.BuySuccess]: CommonAnalyticsData & {\n    address: string | undefined;\n    amount: number | undefined;\n    from: string | undefined;\n    paymaster: boolean | undefined;\n    to: string | undefined;\n    transactionHash: string | undefined;\n  };\n  [BuyEvent.BuyCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Checkout component events data\n */\nexport type CheckoutEventData = {\n  [CheckoutEvent.CheckoutSuccess]: CommonAnalyticsData & {\n    chargeHandlerId: string;\n    transactionHash: string | undefined;\n  };\n  [CheckoutEvent.CheckoutFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [CheckoutEvent.CheckoutInitiated]: CommonAnalyticsData & {\n    address: string | undefined;\n    amount: number;\n    productId: string;\n  };\n  [CheckoutEvent.CheckoutCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Mint component events data\n */\nexport type MintEventData = {\n  [MintEvent.MintFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [MintEvent.MintInitiated]: CommonAnalyticsData & {\n    contractAddress: string;\n    quantity: number;\n    tokenId: string;\n  };\n  [MintEvent.MintQuantityChanged]: CommonAnalyticsData & {\n    quantity: number;\n  };\n  [MintEvent.MintSuccess]: CommonAnalyticsData & {\n    address: string;\n    amountMinted: number;\n    contractAddress: string;\n    isSponsored: boolean;\n    tokenId: string;\n  };\n  [MintEvent.MintCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Transaction component events data\n */\nexport type TransactionEventData = {\n  [TransactionEvent.TransactionFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [TransactionEvent.TransactionInitiated]: CommonAnalyticsData & {\n    address: string | undefined;\n  };\n  [TransactionEvent.TransactionSuccess]: CommonAnalyticsData & {\n    paymaster: boolean | undefined;\n    address: string | undefined;\n    transactionHash: string | undefined;\n  };\n  [TransactionEvent.TransactionCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Fund component events data\n */\nexport type FundEventData = {\n  [FundEvent.FundAmountChanged]: CommonAnalyticsData & {\n    amount: number;\n    currency: string;\n  };\n  [FundEvent.FundFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [FundEvent.FundInitiated]: CommonAnalyticsData & {\n    currency: string;\n  };\n  [FundEvent.FundOptionSelected]: CommonAnalyticsData & {\n    option: string;\n  };\n  [FundEvent.FundSuccess]: CommonAnalyticsData & {\n    address: string;\n    amount: number;\n    currency: string;\n    transactionHash: string;\n  };\n  [FundEvent.FundCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Earn component events data\n */\nexport type EarnEventData = {\n  [EarnEvent.EarnDepositInitiated]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnDepositSuccess]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnDepositFailure]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnDepositCanceled]: CommonAnalyticsData;\n  [EarnEvent.EarnWithdrawInitiated]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnWithdrawSuccess]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnWithdrawFailure]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnWithdrawCanceled]: CommonAnalyticsData;\n};\n\n// Update main AnalyticsEventData type to include all component events\nexport type AnalyticsEventData = {\n  // Appchain events\n  [AppchainEvent.AppchainBridgeDepositInitiated]: AppchainEventData[AppchainEvent.AppchainBridgeDepositInitiated];\n  [AppchainEvent.AppchainBridgeDepositSuccess]: AppchainEventData[AppchainEvent.AppchainBridgeDepositSuccess];\n  [AppchainEvent.AppchainBridgeDepositFailure]: AppchainEventData[AppchainEvent.AppchainBridgeDepositFailure];\n  [AppchainEvent.AppchainBridgeWithdrawInitiated]: AppchainEventData[AppchainEvent.AppchainBridgeWithdrawInitiated];\n  [AppchainEvent.AppchainBridgeWithdrawSuccess]: AppchainEventData[AppchainEvent.AppchainBridgeWithdrawSuccess];\n  [AppchainEvent.AppchainBridgeWithdrawFailure]: AppchainEventData[AppchainEvent.AppchainBridgeWithdrawFailure];\n  [AppchainEvent.AppchainBridgeWaitForClaimFailure]: AppchainEventData[AppchainEvent.AppchainBridgeWaitForClaimFailure];\n  [AppchainEvent.AppchainBridgeClaimSuccess]: AppchainEventData[AppchainEvent.AppchainBridgeClaimSuccess];\n  [AppchainEvent.AppchainBridgeClaimFailure]: AppchainEventData[AppchainEvent.AppchainBridgeClaimFailure];\n\n  // Wallet events\n  [WalletEvent.ConnectError]: WalletEventData[WalletEvent.ConnectError];\n  [WalletEvent.ConnectInitiated]: WalletEventData[WalletEvent.ConnectInitiated];\n  [WalletEvent.ConnectSuccess]: WalletEventData[WalletEvent.ConnectSuccess];\n  [WalletEvent.Disconnect]: WalletEventData[WalletEvent.Disconnect];\n  [WalletEvent.OptionSelected]: CommonAnalyticsData & {\n    option: WalletOption;\n  };\n  [WalletEvent.ConnectCanceled]: WalletEventData[WalletEvent.ConnectCanceled];\n\n  // Swap events\n  [SwapEvent.SlippageChanged]: SwapEventData[SwapEvent.SlippageChanged];\n  [SwapEvent.TokenSelected]: SwapEventData[SwapEvent.TokenSelected];\n  [SwapEvent.SwapSuccess]: SwapEventData[SwapEvent.SwapSuccess];\n  [SwapEvent.SwapFailure]: SwapEventData[SwapEvent.SwapFailure];\n  [SwapEvent.SwapInitiated]: SwapEventData[SwapEvent.SwapInitiated];\n  [SwapEvent.SwapCanceled]: SwapEventData[SwapEvent.SwapCanceled];\n\n  // Buy events\n  [BuyEvent.BuyFailure]: BuyEventData[BuyEvent.BuyFailure];\n  [BuyEvent.BuyInitiated]: BuyEventData[BuyEvent.BuyInitiated];\n  [BuyEvent.BuyOptionSelected]: BuyEventData[BuyEvent.BuyOptionSelected];\n  [BuyEvent.BuySuccess]: BuyEventData[BuyEvent.BuySuccess];\n  [BuyEvent.BuyCanceled]: BuyEventData[BuyEvent.BuyCanceled];\n\n  // Checkout events\n  [CheckoutEvent.CheckoutFailure]: CheckoutEventData[CheckoutEvent.CheckoutFailure];\n  [CheckoutEvent.CheckoutInitiated]: CheckoutEventData[CheckoutEvent.CheckoutInitiated];\n  [CheckoutEvent.CheckoutSuccess]: CheckoutEventData[CheckoutEvent.CheckoutSuccess];\n  [CheckoutEvent.CheckoutCanceled]: CheckoutEventData[CheckoutEvent.CheckoutCanceled];\n\n  // Mint events\n  [MintEvent.MintFailure]: MintEventData[MintEvent.MintFailure];\n  [MintEvent.MintInitiated]: MintEventData[MintEvent.MintInitiated];\n  [MintEvent.MintQuantityChanged]: MintEventData[MintEvent.MintQuantityChanged];\n  [MintEvent.MintSuccess]: MintEventData[MintEvent.MintSuccess];\n  [MintEvent.MintCanceled]: MintEventData[MintEvent.MintCanceled];\n\n  // Transaction events\n  [TransactionEvent.TransactionFailure]: TransactionEventData[TransactionEvent.TransactionFailure];\n  [TransactionEvent.TransactionInitiated]: TransactionEventData[TransactionEvent.TransactionInitiated];\n  [TransactionEvent.TransactionSuccess]: TransactionEventData[TransactionEvent.TransactionSuccess];\n  [TransactionEvent.TransactionCanceled]: TransactionEventData[TransactionEvent.TransactionCanceled];\n\n  // Fund events\n  [FundEvent.FundAmountChanged]: FundEventData[FundEvent.FundAmountChanged];\n  [FundEvent.FundFailure]: FundEventData[FundEvent.FundFailure];\n  [FundEvent.FundInitiated]: FundEventData[FundEvent.FundInitiated];\n  [FundEvent.FundOptionSelected]: FundEventData[FundEvent.FundOptionSelected];\n  [FundEvent.FundSuccess]: FundEventData[FundEvent.FundSuccess];\n  [FundEvent.FundCanceled]: FundEventData[FundEvent.FundCanceled];\n\n  // Earn events\n  [EarnEvent.EarnDepositInitiated]: EarnEventData[EarnEvent.EarnDepositInitiated];\n  [EarnEvent.EarnDepositSuccess]: EarnEventData[EarnEvent.EarnDepositSuccess];\n  [EarnEvent.EarnDepositFailure]: EarnEventData[EarnEvent.EarnDepositFailure];\n  [EarnEvent.EarnDepositCanceled]: EarnEventData[EarnEvent.EarnDepositCanceled];\n  [EarnEvent.EarnWithdrawInitiated]: EarnEventData[EarnEvent.EarnWithdrawInitiated];\n  [EarnEvent.EarnWithdrawSuccess]: EarnEventData[EarnEvent.EarnWithdrawSuccess];\n  [EarnEvent.EarnWithdrawFailure]: EarnEventData[EarnEvent.EarnWithdrawFailure];\n  [EarnEvent.EarnWithdrawCanceled]: EarnEventData[EarnEvent.EarnWithdrawCanceled];\n\n  // Error events\n  [ErrorEvent.ComponentError]: CommonAnalyticsData & {\n    component: string;\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n};\n"],"names":["WalletEvent","WalletOption","SwapEvent","BuyOption","BuyEvent","CheckoutEvent","MintEvent","TransactionEvent","FundEvent","EarnEvent","AppchainEvent","ErrorEvent"],"mappings":"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"}