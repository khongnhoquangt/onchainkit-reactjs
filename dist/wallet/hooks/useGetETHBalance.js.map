{"version":3,"file":"useGetETHBalance.js","sources":["../../../src/wallet/hooks/useGetETHBalance.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { formatUnits } from 'viem';\nimport type { Address } from 'viem';\nimport { useBalance } from 'wagmi';\nimport type { UseBalanceReturnType } from 'wagmi';\nimport { DEFAULT_QUERY_OPTIONS } from '../../internal/constants';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { SwapError } from '../../swap';\nimport { getSwapErrorCode } from '../../swap/utils/getSwapErrorCode';\nimport type { UseGetETHBalanceResponse } from '../types';\n\nconst ETH_DECIMALS = 18;\n\nexport function useGetETHBalance(address?: Address): UseGetETHBalanceResponse {\n  const ethBalanceResponse: UseBalanceReturnType = useBalance({\n    address,\n    query: {\n      ...DEFAULT_QUERY_OPTIONS,\n    },\n  });\n\n  return useMemo(() => {\n    let error: SwapError | undefined;\n    if (ethBalanceResponse?.error) {\n      error = {\n        code: getSwapErrorCode('balance'),\n        error: ethBalanceResponse?.error?.message,\n        message: '',\n      };\n    }\n    if (\n      !ethBalanceResponse?.data?.value &&\n      ethBalanceResponse?.data?.value !== 0n\n    ) {\n      return {\n        convertedBalance: '',\n        roundedBalance: '',\n        error,\n        response: ethBalanceResponse,\n      };\n    }\n    const convertedBalance = formatUnits(\n      ethBalanceResponse?.data?.value,\n      ETH_DECIMALS,\n    );\n    const roundedBalance = getRoundedAmount(convertedBalance, 8);\n    return {\n      convertedBalance,\n      error,\n      response: ethBalanceResponse,\n      roundedBalance,\n    };\n  }, [ethBalanceResponse]);\n}\n"],"names":[],"mappings":";;;;;;AAWA,MAAM,eAAe;AAEd,SAAS,iBAAiB,SAA6C;AAC5E,QAAM,qBAA2C,WAAW;AAAA,IAC1D;AAAA,IACA,OAAO;AAAA,MACL,GAAG;AAAA,IAAA;AAAA,EACL,CACD;AAED,SAAO,QAAQ,MAAM;;AACnB,QAAI;AACJ,QAAI,yDAAoB,OAAO;AAC7B,cAAQ;AAAA,QACN,MAAM,iBAAiB,SAAS;AAAA,QAChC,QAAO,8DAAoB,UAApB,mBAA2B;AAAA,QAClC,SAAS;AAAA,MAAA;AAAA,IAEb;AACA,QACE,GAAC,8DAAoB,SAApB,mBAA0B,YAC3B,8DAAoB,SAApB,mBAA0B,WAAU,IACpC;AACA,aAAO;AAAA,QACL,kBAAkB;AAAA,QAClB,gBAAgB;AAAA,QAChB;AAAA,QACA,UAAU;AAAA,MAAA;AAAA,IAEd;AACA,UAAM,mBAAmB;AAAA,OACvB,8DAAoB,SAApB,mBAA0B;AAAA,MAC1B;AAAA,IAAA;AAEF,UAAM,iBAAiB,iBAAiB,kBAAkB,CAAC;AAC3D,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV;AAAA,IAAA;AAAA,EAEJ,GAAG,CAAC,kBAAkB,CAAC;AACzB;"}