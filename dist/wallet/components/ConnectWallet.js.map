{"version":3,"file":"ConnectWallet.js","sources":["../../../src/wallet/components/ConnectWallet.tsx"],"sourcesContent":["'use client';\n\nimport { Avatar, Name } from '@/identity';\nimport { Children, isValidElement, useCallback, useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useAccount, useConnect } from 'wagmi';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { WalletEvent } from '../../core/analytics/types';\nimport { IdentityProvider } from '../../identity/components/IdentityProvider';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { findComponent } from '../../internal/utils/findComponent';\nimport {\n  border,\n  cn,\n  color,\n  text as dsText,\n  pressable,\n} from '../../styles/theme';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport type { ConnectWalletReact } from '../types';\nimport { ConnectButton } from './ConnectButton';\nimport { ConnectWalletText } from './ConnectWalletText';\nimport { WalletModal } from './WalletModal';\nimport { useWalletContext } from './WalletProvider';\n\nconst connectWalletDefaultChildren = (\n  <>\n    <Avatar className=\"h-6 w-6\" />\n    <Name />\n  </>\n);\n\nexport function ConnectWallet({\n  children,\n  className,\n  // In a few version we will officially deprecate this prop,\n  // but for now we will keep it for backward compatibility.\n  text = 'Connect Wallet',\n  onConnect,\n  disconnectedLabel,\n}: ConnectWalletReact) {\n  const { config = { wallet: { display: undefined } } } = useOnchainKit();\n\n  // Core Hooks\n  const {\n    setIsConnectModalOpen,\n    isSubComponentOpen,\n    setIsSubComponentOpen,\n    handleClose,\n  } = useWalletContext();\n  const {\n    address: accountAddress,\n    status,\n    connector: accountConnector,\n  } = useAccount();\n  const { connectors, connect, status: connectStatus } = useConnect();\n  const { sendAnalytics } = useAnalytics();\n\n  // State\n  const [hasClickedConnect, setHasClickedConnect] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false); // duplicate modal state because ConnectWallet not always within WalletProvider\n\n  // TODO: remove lines 57-74 after deprecating ConnectWalletText\n  // Get connectWalletText from children when present,\n  // this is used to customize the connect wallet button text\n  const { connectWalletText } = useMemo(() => {\n    const childrenArray = Children.toArray(children);\n    return {\n      connectWalletText: childrenArray.find(findComponent(ConnectWalletText)),\n    };\n  }, [children]);\n\n  // Remove connectWalletText from children if present\n  const childrenWithoutConnectWalletText = useMemo(() => {\n    return Children.map(children, (child: ReactNode) => {\n      if (isValidElement(child) && child.type === ConnectWalletText) {\n        return null;\n      }\n      return child;\n    });\n  }, [children]);\n\n  // Wallet connect status\n  const connector = accountConnector || connectors[0];\n  const isLoading = connectStatus === 'pending' || status === 'connecting';\n\n  // Handles\n  const handleToggle = useCallback(() => {\n    if (isSubComponentOpen) {\n      handleClose?.(); // optional because ConnectWallet not always within WalletProvider\n    } else {\n      setIsSubComponentOpen(true);\n    }\n  }, [isSubComponentOpen, handleClose, setIsSubComponentOpen]);\n\n  const handleCloseConnectModal = useCallback(() => {\n    setIsModalOpen(false); // duplicate state because ConnectWallet not always within WalletProvider\n    setIsConnectModalOpen?.(false); // optional because ConnectWallet not always within WalletProvider\n  }, [setIsConnectModalOpen]);\n\n  const handleOpenConnectModal = useCallback(() => {\n    setIsModalOpen(true); // duplicate state because ConnectWallet not always within WalletProvider\n    setIsConnectModalOpen?.(true); // optional because ConnectWallet not always within WalletProvider\n    setHasClickedConnect(true);\n  }, [setIsConnectModalOpen]);\n\n  const handleAnalyticsInitiated = useCallback(\n    (component: string) => {\n      sendAnalytics(WalletEvent.ConnectInitiated, {\n        component,\n      });\n    },\n    [sendAnalytics],\n  );\n\n  const handleAnalyticsSuccess = useCallback(\n    (walletAddress: string | undefined) => {\n      const walletProvider = connector?.name;\n      sendAnalytics(WalletEvent.ConnectSuccess, {\n        address: walletAddress ?? '',\n        walletProvider,\n      });\n    },\n    [sendAnalytics, connector],\n  );\n\n  const handleAnalyticsError = useCallback(\n    (errorMessage: string, component: string) => {\n      const walletProvider = connector?.name;\n      sendAnalytics(WalletEvent.ConnectError, {\n        error: errorMessage,\n        metadata: {\n          connector: walletProvider,\n          component,\n        },\n      });\n    },\n    [sendAnalytics, connector],\n  );\n\n  // Effects\n  useEffect(() => {\n    if (hasClickedConnect && status === 'connected' && onConnect) {\n      onConnect();\n      setHasClickedConnect(false);\n    }\n  }, [status, hasClickedConnect, onConnect]);\n\n  useEffect(() => {\n    if (status === 'connected' && accountAddress && connector) {\n      handleAnalyticsSuccess(accountAddress);\n    }\n  }, [status, accountAddress, connector, handleAnalyticsSuccess]);\n\n  const handleConnectClick = useCallback(() => {\n    if (config?.wallet?.display === 'modal') {\n      handleOpenConnectModal();\n      setHasClickedConnect(true);\n      handleAnalyticsInitiated('WalletModal');\n      return;\n    }\n    handleAnalyticsInitiated('ConnectWallet');\n    connect(\n      { connector },\n      {\n        onSuccess: () => {\n          onConnect?.();\n          handleAnalyticsSuccess(accountAddress);\n        },\n        onError: (error) => {\n          handleAnalyticsError(error.message, 'ConnectWallet');\n        },\n      },\n    );\n  }, [\n    config?.wallet?.display,\n    accountAddress,\n    connect,\n    connector,\n    handleAnalyticsError,\n    handleAnalyticsInitiated,\n    handleAnalyticsSuccess,\n    handleOpenConnectModal,\n    onConnect,\n  ]);\n\n  if (status === 'disconnected') {\n    return (\n      <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n        <ConnectButton\n          className={className}\n          connectWalletText={connectWalletText || disconnectedLabel}\n          onClick={handleConnectClick}\n          text={text}\n        />\n        {config?.wallet?.display === 'modal' && (\n          <WalletModal isOpen={isModalOpen} onClose={handleCloseConnectModal} />\n        )}\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex\" data-testid=\"ockConnectWallet_Container\">\n        <button\n          type=\"button\"\n          data-testid=\"ockConnectAccountButtonInner\"\n          className={cn(\n            pressable.primary,\n            dsText.headline,\n            color.inverse,\n            'inline-flex min-w-[153px] items-center justify-center rounded-xl px-4 py-3',\n            pressable.disabled,\n            className,\n          )}\n          disabled={true}\n        >\n          <Spinner />\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <IdentityProvider address={accountAddress}>\n      <div className=\"flex gap-4\" data-testid=\"ockConnectWallet_Container\">\n        <button\n          type=\"button\"\n          data-testid=\"ockConnectWallet_Connected\"\n          className={cn(\n            pressable.secondary,\n            border.radius,\n            color.foreground,\n            'px-4 py-3',\n            isSubComponentOpen &&\n              'ock-bg-secondary-active hover:ock-bg-secondary-active',\n            className,\n          )}\n          onClick={handleToggle}\n        >\n          <div className=\"flex items-center justify-center gap-2\">\n            {childrenWithoutConnectWalletText || connectWalletDefaultChildren}\n          </div>\n        </button>\n      </div>\n    </IdentityProvider>\n  );\n}\n"],"names":["this","text","_a","dsText"],"mappings":"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"}