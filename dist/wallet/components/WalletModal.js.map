{"version":3,"file":"WalletModal.js","sources":["../../../src/wallet/components/WalletModal.tsx"],"sourcesContent":["'use client';\n\nimport { Dialog } from '@/internal/components/Dialog';\nimport { CloseSvg } from '@/internal/svg/closeSvg';\nimport { coinbaseWalletSvg } from '@/internal/svg/coinbaseWalletSvg';\nimport { defaultAvatarSVG } from '@/internal/svg/defaultAvatarSVG';\nimport { frameWalletSvg } from '@/internal/svg/frameWalletSvg';\nimport { metamaskSvg } from '@/internal/svg/metamaskSvg';\nimport { phantomSvg } from '@/internal/svg/phantomSvg';\nimport { rabbySvg } from '@/internal/svg/rabbySvg';\nimport { trustWalletSvg } from '@/internal/svg/trustWalletSvg';\nimport { background, border, cn, color, pressable, text } from '@/styles/theme';\nimport { useOnchainKit } from '@/useOnchainKit';\nimport { useCallback } from 'react';\nimport { useConnect } from 'wagmi';\nimport {\n  baseAccount,\n  coinbaseWallet,\n  injected,\n  metaMask,\n} from 'wagmi/connectors';\nimport { checkWalletAndRedirect } from '../utils/checkWalletAndRedirect';\nimport { BaseAccountSvg } from '@/internal/svg/baseAccountSvg';\n\ntype WalletProviderOption = {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  connector: () => void;\n  enabled: boolean;\n};\n\ntype WalletModalProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  className?: string;\n  onError?: (error: Error) => void;\n};\n\n// eslint-disable-next-line complexity\nexport function WalletModal({\n  className,\n  isOpen,\n  onClose,\n  onError,\n}: WalletModalProps) {\n  const { connect } = useConnect();\n  const { config } = useOnchainKit();\n\n  const appLogo = config?.appearance?.logo ?? undefined;\n  const appName = config?.appearance?.name ?? undefined;\n  const privacyPolicyUrl = config?.wallet?.privacyUrl ?? undefined;\n  const termsOfServiceUrl = config?.wallet?.termsUrl ?? undefined;\n  const supportedWallets = config?.wallet?.supportedWallets ?? {\n    rabby: false,\n    trust: false,\n    frame: false,\n  };\n  const isSignUpEnabled = config?.wallet?.signUpEnabled ?? true;\n\n  const handleBaseAccountConnection = useCallback(() => {\n    try {\n      connect({\n        connector: baseAccount({\n          appName,\n          appLogoUrl: appLogo,\n        }),\n      });\n      onClose();\n    } catch (error) {\n      console.error('Base Account connection error:', error);\n      if (onError) {\n        onError(\n          error instanceof Error\n            ? error\n            : new Error('Failed to connect wallet'),\n        );\n      }\n    }\n  }, [appName, appLogo, connect, onClose, onError]);\n\n  const handleCoinbaseWalletConnection = useCallback(() => {\n    try {\n      const cbConnector = coinbaseWallet({\n        preference: 'all',\n        appName,\n        appLogoUrl: appLogo,\n      });\n      connect({ connector: cbConnector });\n      onClose();\n    } catch (error) {\n      console.error('Coinbase Wallet connection error:', error);\n      if (onError) {\n        onError(\n          error instanceof Error\n            ? error\n            : new Error('Failed to connect wallet'),\n        );\n      }\n    }\n  }, [appName, appLogo, connect, onClose, onError]);\n\n  const handleMetaMaskConnection = useCallback(() => {\n    try {\n      const metamaskConnector = metaMask({\n        dappMetadata: {\n          name: appName || 'OnchainKit App',\n          url: window.location.origin,\n          iconUrl: appLogo,\n        },\n      });\n\n      connect({ connector: metamaskConnector });\n      onClose();\n    } catch (error) {\n      console.error('MetaMask connection error:', error);\n      onError?.(\n        error instanceof Error ? error : new Error('Failed to connect wallet'),\n      );\n    }\n  }, [connect, onClose, onError, appName, appLogo]);\n\n  const handlePhantomConnection = useCallback(() => {\n    try {\n      if (!checkWalletAndRedirect('phantom')) {\n        onClose();\n        return;\n      }\n\n      const phantomConnector = injected({\n        target: 'phantom',\n      });\n\n      connect({ connector: phantomConnector });\n      onClose();\n    } catch (error) {\n      console.error('Phantom connection error:', error);\n      onError?.(\n        error instanceof Error ? error : new Error('Failed to connect wallet'),\n      );\n    }\n  }, [connect, onClose, onError]);\n\n  const handleRabbyConnection = useCallback(() => {\n    try {\n      if (!checkWalletAndRedirect('rabby')) {\n        onClose();\n        return;\n      }\n\n      const rabbyConnector = injected({\n        target: 'rabby',\n      });\n\n      connect({ connector: rabbyConnector });\n      onClose();\n    } catch (error) {\n      console.error('Rabby connection error:', error);\n      onError?.(\n        error instanceof Error ? error : new Error('Failed to connect wallet'),\n      );\n    }\n  }, [connect, onClose, onError]);\n\n  const handleTrustWalletConnection = useCallback(() => {\n    try {\n      if (!checkWalletAndRedirect('trust')) {\n        onClose();\n        return;\n      }\n\n      const trustConnector = injected({\n        target: 'trust',\n      });\n\n      connect({ connector: trustConnector });\n      onClose();\n    } catch (error) {\n      console.error('Trust Wallet connection error:', error);\n      onError?.(\n        error instanceof Error ? error : new Error('Failed to connect wallet'),\n      );\n      onClose();\n    }\n  }, [connect, onClose, onError]);\n\n  /**\n   * Frame wallet doesn't respond properly to injected({ target: 'frame' }) unlike other wallets.\n   * Solution: Verify window.ethereum.isFrame first, then use untargeted injected() connector.\n   * This ensures the Frame button only connects to Frame wallet.\n   */\n  const handleFrameWalletConnection = useCallback(() => {\n    try {\n      if (!window.ethereum?.isFrame) {\n        window.open('https://frame.sh/download', '_blank');\n        onClose();\n        return;\n      }\n\n      const frameConnector = injected();\n      connect({ connector: frameConnector });\n      onClose();\n    } catch (error) {\n      console.error('Frame Wallet connection error:', error);\n      onError?.(\n        error instanceof Error ? error : new Error('Failed to connect wallet'),\n      );\n\n      onClose();\n    }\n  }, [connect, onClose, onError]);\n\n  const availableWallets: WalletProviderOption[] = [\n    {\n      id: 'base-account',\n      name: 'Base',\n      icon: <BaseAccountSvg />,\n      connector: handleBaseAccountConnection,\n      enabled: true,\n    },\n    {\n      id: 'coinbase',\n      name: 'Coinbase Wallet',\n      icon: coinbaseWalletSvg,\n      connector: handleCoinbaseWalletConnection,\n      enabled: true,\n    },\n    {\n      id: 'metamask',\n      name: 'MetaMask',\n      icon: metamaskSvg,\n      connector: handleMetaMaskConnection,\n      enabled: true,\n    },\n    {\n      id: 'phantom',\n      name: 'Phantom',\n      icon: phantomSvg,\n      connector: handlePhantomConnection,\n      enabled: true,\n    },\n    {\n      id: 'rabby',\n      name: 'Rabby',\n      icon: rabbySvg,\n      connector: handleRabbyConnection,\n      enabled: supportedWallets.rabby === true,\n    },\n    {\n      id: 'trust',\n      name: 'Trust Wallet',\n      icon: trustWalletSvg,\n      connector: handleTrustWalletConnection,\n      enabled: supportedWallets.trust === true,\n    },\n    {\n      id: 'frame',\n      name: 'Frame',\n      icon: frameWalletSvg,\n      connector: handleFrameWalletConnection,\n      enabled: supportedWallets.frame === true,\n    },\n  ].filter((wallet) => wallet.enabled);\n\n  return (\n    <Dialog isOpen={isOpen} onClose={onClose} aria-label=\"Connect Wallet\">\n      <div\n        data-testid=\"ockModalOverlay\"\n        className={cn(\n          border.lineDefault,\n          border.radius,\n          background.default,\n          'w-[22rem] p-6 pb-4',\n          'relative flex flex-col items-center gap-4',\n          className,\n        )}\n      >\n        <button\n          type=\"button\"\n          onClick={onClose}\n          className={cn(\n            pressable.default,\n            border.radius,\n            border.default,\n            'absolute top-4 right-4',\n            'flex items-center justify-center p-1',\n            'transition-colors duration-200',\n          )}\n          aria-label=\"Close modal\"\n        >\n          <div className={cn('flex h-4 w-4 items-center justify-center')}>\n            <CloseSvg />\n          </div>\n        </button>\n\n        {(appLogo || appName) && (\n          <div className=\"flex w-full flex-col items-center gap-2 py-3\">\n            {appLogo && (\n              <div className={cn(border.radius, 'h-14 w-14 overflow-hidden')}>\n                <img\n                  src={appLogo}\n                  alt={`${appName || 'App'} icon`}\n                  className=\"h-full w-full object-cover\"\n                />\n              </div>\n            )}\n            {appName && (\n              <h2\n                className={cn(text.headline, color.foreground, 'text-center')}\n              >\n                {appName}\n              </h2>\n            )}\n          </div>\n        )}\n\n        <div className=\"flex w-full flex-col gap-3\">\n          {isSignUpEnabled && (\n            <button\n              type=\"button\"\n              onClick={handleCoinbaseWalletConnection}\n              className={cn(\n                border.radius,\n                text.body,\n                pressable.alternate,\n                color.foreground,\n                'flex items-center justify-between px-4 py-3 text-left',\n              )}\n            >\n              Sign up\n              <div className=\"h-4 w-4\">{defaultAvatarSVG}</div>\n            </button>\n          )}\n\n          <div className=\"relative\">\n            {isSignUpEnabled && (\n              <div className=\"absolute inset-0 flex items-center\">\n                <div\n                  className={cn(border.lineDefault, 'w-full border-[0.5px]')}\n                />\n              </div>\n            )}\n            <div className=\"relative flex justify-center\">\n              <span\n                className={cn(\n                  background.default,\n                  color.foregroundMuted,\n                  text.legal,\n                  'px-2',\n                )}\n              >\n                {isSignUpEnabled\n                  ? 'or continue with an existing wallet'\n                  : 'Connect your wallet'}\n              </span>\n            </div>\n          </div>\n          {availableWallets.map((wallet) => (\n            <button\n              key={wallet.id}\n              type=\"button\"\n              onClick={wallet.connector}\n              className={cn(\n                border.radius,\n                background.default,\n                text.body,\n                pressable.alternate,\n                color.foreground,\n                'flex items-center justify-between px-4 py-3 text-left',\n              )}\n            >\n              {wallet.name}\n              <div className=\"-mr-0.5 flex h-4 w-4 items-center justify-center\">\n                {wallet.icon}\n              </div>\n            </button>\n          ))}\n        </div>\n\n        <div\n          className={cn(\n            color.foregroundMuted,\n            text.legal,\n            'flex flex-col items-center justify-center gap-1 px-4',\n            'mt-4 text-center',\n          )}\n        >\n          <span className=\"font-normal text-[10px] leading-[13px]\">\n            By connecting a wallet, you agree to our\n          </span>\n          <span className=\"font-normal text-[10px] leading-[13px]\">\n            {termsOfServiceUrl && (\n              <a\n                href={termsOfServiceUrl}\n                className={cn(color.primary, 'hover:underline')}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tabIndex={0}\n              >\n                Terms of Service\n              </a>\n            )}{' '}\n            {termsOfServiceUrl && privacyPolicyUrl && 'and'}{' '}\n            {privacyPolicyUrl && (\n              <a\n                href={privacyPolicyUrl}\n                className={cn(color.primary, 'hover:underline')}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                tabIndex={0}\n              >\n                Privacy Policy\n              </a>\n            )}\n            .\n          </span>\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n"],"names":["_a"],"mappings":"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"}