{"version":3,"file":"AppchainBridgeWithdraw.js","sources":["../../../../src/appchain/bridge/components/AppchainBridgeWithdraw.tsx"],"sourcesContent":["'use client';\nimport { Spinner } from '@/internal/components/Spinner';\nimport { ErrorSvg } from '@/internal/svg/fullWidthErrorSvg';\nimport { SuccessSvg } from '@/internal/svg/fullWidthSuccessSvg';\nimport { border, cn, color, pressable, text } from '@/styles/theme';\nimport { useEffect } from 'react';\nimport { useWithdrawButton } from '../hooks/useWithdrawButton';\nimport { useAppchainBridgeContext } from './AppchainBridgeProvider';\n\nconst buttonStyles = cn(\n  pressable.primary,\n  border.radius,\n  'w-full rounded-xl',\n  'px-4 py-3 font-medium text-base text-white leading-6',\n  text.headline,\n);\n\nexport const AppchainBridgeWithdraw = () => {\n  const {\n    withdrawStatus,\n    waitForWithdrawal,\n    resumeWithdrawalTxHash,\n    handleResetState,\n  } = useAppchainBridgeContext();\n\n  const { shouldShowClaim, label, isError, isPending } = useWithdrawButton({\n    withdrawStatus,\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (withdrawStatus === 'withdrawSuccess') {\n        // If appchain withdrawal is successful, wait for claim to be ready\n        waitForWithdrawal();\n      }\n      if (resumeWithdrawalTxHash) {\n        // If the user has resumed a withdrawal transaction, wait for claim to be ready\n        waitForWithdrawal(resumeWithdrawalTxHash);\n      }\n    })();\n  }, [withdrawStatus, waitForWithdrawal, resumeWithdrawalTxHash]);\n\n  return (\n    <div className=\"flex h-full w-full flex-col justify-between\">\n      <div>\n        <div className=\"flex items-center\">\n          <h2 className=\"ock-text-foreground flex-1 text-center font-medium text-lg\">\n            {label}\n          </h2>\n        </div>\n      </div>\n      <div className=\"mt-16 px-4 pb-4\">\n        {isError && <ErrorContent onBack={handleResetState} />}\n        {isPending && <LoadingContent />}\n        {shouldShowClaim && <ClaimContent />}\n        {withdrawStatus === 'claimRejected' && (\n          <div className={cn(text.label2, color.error, 'mt-2')}>\n            Transaction denied\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction LoadingContent() {\n  return (\n    <div className=\"flex h-full flex-col items-center justify-center gap-16\">\n      <Spinner className=\"!border-t-[var(--ock-bg-primary)] h-24 w-24\" />\n      <span className=\"px-4 text-center font-medium text-base\">\n        Waiting for claim to be ready...\n        <br />\n        Please do not close this window.\n      </span>\n    </div>\n  );\n}\n\nfunction ErrorContent({ onBack }: { onBack: () => void }) {\n  return (\n    <div className=\"flex flex-col items-center gap-16\">\n      <div className=\"flex justify-center\">\n        <div className=\"h-20 w-20\">\n          <ErrorSvg fill=\"var(--ock-bg-error)\" />\n        </div>\n      </div>\n      <div className=\"flex flex-col items-center gap-4\">\n        <span className=\"px-4 text-center font-medium text-base\">\n          There was an error processing your withdrawal.\n          <br />\n          If the issue persists, please contact support.\n        </span>\n        <button onClick={onBack} className={buttonStyles} type=\"button\">\n          <div\n            className={cn(text.headline, color.inverse, 'flex justify-center')}\n          >\n            Back to bridge\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction ClaimContent() {\n  const { withdrawStatus, proveAndFinalizeWithdrawal } =\n    useAppchainBridgeContext();\n\n  const { buttonDisabled, buttonContent } = useWithdrawButton({\n    withdrawStatus,\n  });\n\n  return (\n    <div className=\"flex flex-col items-center gap-16\">\n      <div className=\"flex justify-center\">\n        <div className=\"h-20 w-20\">\n          <SuccessSvg fill=\"var(--ock-bg-primary)\" />\n        </div>\n      </div>\n      <button\n        onClick={proveAndFinalizeWithdrawal}\n        className={cn(buttonStyles, buttonDisabled && pressable.disabled)}\n        type=\"button\"\n      >\n        <div\n          className={cn(text.headline, color.inverse, 'flex justify-center')}\n        >\n          {buttonContent}\n        </div>\n      </button>\n    </div>\n  );\n}\n"],"names":["this"],"mappings":"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"}