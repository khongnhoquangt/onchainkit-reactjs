{"version":3,"file":"AppchainBridgeInput.js","sources":["../../../../src/appchain/bridge/components/AppchainBridgeInput.tsx"],"sourcesContent":["'use client';\nimport { Address } from '@/identity';\nimport { useMemo, useState } from 'react';\nimport { useAccount } from 'wagmi';\nimport { TextInput } from '../../../internal/components/TextInput';\nimport { isValidAmount } from '../../../internal/utils/isValidAmount';\nimport { background, border, cn, color, text } from '../../../styles/theme';\nimport { TokenSelectDropdown } from '../../../token';\nimport { useAppchainBridgeContext } from './AppchainBridgeProvider';\n\ninterface AppchainBridgeInputProps {\n  className?: string;\n  delayMs?: number;\n}\n\nexport function AppchainBridgeInput({\n  className,\n  delayMs = 50,\n}: AppchainBridgeInputProps) {\n  const {\n    balance,\n    bridgeParams,\n    bridgeableTokens,\n    to,\n    isPriceLoading,\n    handleAmountChange,\n    setIsAddressModalOpen,\n    resetDepositStatus,\n  } = useAppchainBridgeContext();\n  const [currentToken, setCurrentToken] = useState(bridgeableTokens[0]);\n  const { address } = useAccount();\n  const insufficientBalance = useMemo(() => {\n    return balance && Number(balance) < Number(bridgeParams.amount);\n  }, [balance, bridgeParams.amount]);\n\n  const label = useMemo(() => {\n    if (insufficientBalance) {\n      return 'Insufficient funds';\n    }\n    if (isPriceLoading) {\n      return (\n        <div className=\"h-4 w-16 animate-pulse rounded bg-gray-200 dark:bg-gray-700\" />\n      );\n    }\n    if (bridgeParams.amountUSD === 'NaN') {\n      return '';\n    }\n    return `~$${bridgeParams.amountUSD}`;\n  }, [insufficientBalance, isPriceLoading, bridgeParams.amountUSD]);\n\n  return (\n    <div\n      className={cn(\n        background.secondary,\n        border.radius,\n        'box-border flex h-[148px] w-full flex-col items-start p-4',\n        className,\n      )}\n      data-testid=\"ockBridgeAmountInput_Container\"\n    >\n      <div className=\"flex w-full items-center justify-between\">\n        <span\n          className={cn(\n            text.label2,\n            color.foregroundMuted,\n            'flex items-center gap-1',\n          )}\n        >\n          Send to{' '}\n          <button\n            type=\"button\"\n            className={cn(\n              'cursor-pointer hover:underline focus:outline-none',\n              text.label2,\n            )}\n            onClick={() => {\n              setIsAddressModalOpen(true);\n            }}\n            title={bridgeParams.recipient}\n          >\n            <Address\n              address={\n                bridgeParams.recipient ||\n                '0x0000000000000000000000000000000000000000'\n              }\n              hasCopyAddressOnClick={false}\n              className={cn(text.label2, '!text-[var(--ock-text-foreground)]')}\n            />\n          </button>{' '}\n          on <span className=\"inline-flex h-4 w-4 items-center\">{to.icon}</span>\n        </span>\n      </div>\n      <div className=\"flex w-full items-center justify-between\">\n        <TextInput\n          className={cn(\n            'mr-2 w-full border-[none] bg-transparent font-display text-[2.5rem]',\n            'leading-none outline-none',\n            color.foreground,\n            insufficientBalance && color.error,\n          )}\n          placeholder=\"0.00\"\n          delayMs={delayMs}\n          inputValidator={isValidAmount}\n          onChange={(value) => {\n            handleAmountChange({\n              amount: value,\n              token: currentToken,\n            });\n          }}\n          value={bridgeParams.amount}\n        />\n        <TokenSelectDropdown\n          token={currentToken}\n          options={bridgeableTokens}\n          setToken={(token) => {\n            handleAmountChange({\n              amount: bridgeParams.amount,\n              token: token,\n            });\n            resetDepositStatus();\n            setCurrentToken(token);\n          }}\n        />\n      </div>\n      <div className=\"mt-4 flex w-full justify-between\">\n        <div className=\"flex items-center\">\n          <span\n            className={cn(\n              text.label2,\n              color.foregroundMuted,\n              insufficientBalance && color.error,\n            )}\n          >\n            {label}\n          </span>\n        </div>\n        {address && (\n          <div className=\"flex items-center\">\n            <span\n              className={cn(text.label2, color.foregroundMuted)}\n            >{`Balance: ${Number(balance).toLocaleString(undefined, {\n              maximumFractionDigits: 5,\n              minimumFractionDigits: 0,\n            })}`}</span>\n            <button\n              type=\"button\"\n              className=\"flex cursor-pointer items-center justify-center px-2 py-1\"\n              data-testid=\"ockBridgeAmountInput_MaxButton\"\n              onClick={() => {\n                handleAmountChange({\n                  amount: balance,\n                  token: bridgeParams.token,\n                });\n              }}\n            >\n              <span className={cn(text.label1, color.primary)}>Max</span>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}