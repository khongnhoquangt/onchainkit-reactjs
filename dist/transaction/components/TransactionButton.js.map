{"version":3,"file":"TransactionButton.js","sources":["../../../src/transaction/components/TransactionButton.tsx"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { useAccount, useChainId } from 'wagmi';\nimport { getChainExplorer } from '../../core/network/getChainExplorer';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { TransactionButtonReact } from '../types';\nimport { isSpinnerDisplayed } from '../utils/isSpinnerDisplayed';\nimport { useTransactionContext } from './TransactionProvider';\n\nexport function TransactionButton({\n  className,\n  disabled = false,\n  text: idleText = 'Transact',\n  errorOverride,\n  successOverride,\n  pendingOverride,\n}: TransactionButtonReact) {\n  const {\n    chainId,\n    errorMessage,\n    isLoading,\n    lifecycleStatus,\n    onSubmit,\n    receipt,\n    transactions,\n    transactionCount,\n    transactionHash,\n    transactionId,\n  } = useTransactionContext();\n\n  const { address } = useAccount();\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const accountChainId = chainId ?? useChainId();\n\n  const isLegacyTransactionInProgress =\n    lifecycleStatus.statusName === 'transactionLegacyExecuted' &&\n    transactionCount !==\n      lifecycleStatus?.statusData?.transactionHashList?.length;\n\n  const isInProgress =\n    lifecycleStatus.statusName === 'buildingTransaction' ||\n    lifecycleStatus.statusName === 'transactionPending' ||\n    isLegacyTransactionInProgress ||\n    isLoading;\n\n  const isMissingProps = !transactions || !address;\n  const isWaitingForReceipt = !!transactionId || !!transactionHash;\n\n  const isDisabled =\n    !receipt &&\n    (isInProgress || isMissingProps || isWaitingForReceipt || disabled);\n\n  const displayPendingState = isSpinnerDisplayed({\n    errorMessage,\n    hasReceipt: !!receipt,\n    isInProgress,\n    transactionHash,\n    transactionId,\n  });\n\n  const { errorText, successText, pendingContent } = useMemo(() => {\n    const successText = successOverride?.text ?? 'View transaction';\n    const errorText = errorOverride?.text ?? 'Try again';\n    const pendingContent = pendingOverride?.text ?? <Spinner />;\n\n    return { successText, errorText, pendingContent };\n  }, [errorOverride, pendingOverride, successOverride]);\n\n  const defaultSuccessHandler = useCallback(() => {\n    // SW will have txn id so open in wallet\n    if (receipt && transactionId && transactionHash && chainId && address) {\n      const url = new URL('https://wallet.coinbase.com/assets/transactions');\n      url.searchParams.set('contentParams[txHash]', transactionHash);\n      url.searchParams.set('contentParams[chainId]', JSON.stringify(chainId));\n      url.searchParams.set('contentParams[fromAddress]', address);\n      return window.open(url, '_blank', 'noopener,noreferrer');\n    }\n    // EOA will not have txn id so open in explorer\n    const chainExplorer = getChainExplorer(accountChainId);\n    return window.open(\n      `${chainExplorer}/tx/${transactionHash}`,\n      '_blank',\n      'noopener,noreferrer',\n    );\n  }, [\n    address,\n    chainId,\n    receipt,\n    transactionId,\n    transactionHash,\n    accountChainId,\n  ]);\n\n  const successHandler = useCallback(() => {\n    if (successOverride?.onClick && receipt) {\n      return successOverride?.onClick?.(receipt);\n    }\n    defaultSuccessHandler();\n  }, [defaultSuccessHandler, successOverride, receipt]);\n\n  const errorHandler = useCallback(() => {\n    if (errorOverride?.onClick) {\n      return errorOverride?.onClick?.();\n    }\n    // if no custom logic, retry submit\n    return onSubmit();\n  }, [errorOverride, onSubmit]);\n\n  const buttonContent = useMemo(() => {\n    // txn successful\n    if (receipt) {\n      return successText;\n    }\n    if (errorMessage) {\n      return errorText;\n    }\n    if (displayPendingState) {\n      return pendingContent;\n    }\n    return idleText;\n  }, [\n    displayPendingState,\n    errorMessage,\n    errorText,\n    idleText,\n    pendingContent,\n    receipt,\n    successText,\n  ]);\n\n  const handleSubmit = useCallback(() => {\n    if (receipt) {\n      successHandler();\n    } else if (errorMessage) {\n      errorHandler();\n    } else {\n      onSubmit();\n    }\n  }, [errorMessage, errorHandler, onSubmit, receipt, successHandler]);\n\n  return (\n    <button\n      className={cn(\n        pressable.primary,\n        border.radius,\n        'w-full rounded-xl',\n        'px-4 py-3 font-medium leading-6',\n        isDisabled && pressable.disabled,\n        text.headline,\n        color.inverse,\n        className,\n      )}\n      onClick={handleSubmit}\n      type=\"button\"\n      disabled={isDisabled}\n      data-testid=\"ockTransactionButton_Button\"\n    >\n      {buttonContent}\n    </button>\n  );\n}\n"],"names":["successText","errorText","pendingContent","_a"],"mappings":"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"}