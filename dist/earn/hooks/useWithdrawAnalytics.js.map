{"version":3,"file":"useWithdrawAnalytics.js","sources":["../../../src/earn/hooks/useWithdrawAnalytics.ts"],"sourcesContent":["import { useAnalytics } from '@/core/analytics/hooks/useAnalytics';\nimport { EarnEvent } from '@/core/analytics/types';\nimport { useEarnContext } from '@/earn/components/EarnProvider';\nimport type { LifecycleStatus } from '@/transaction/types';\nimport { useEffect, useMemo, useRef, useState } from 'react';\n\nexport const useWithdrawAnalytics = (withdrawnAmount: string) => {\n  const [transactionState, setTransactionState] = useState<\n    LifecycleStatus['statusName'] | null\n  >(null);\n  const successSent = useRef(false);\n  const errorSent = useRef(false);\n  const { sendAnalytics } = useAnalytics();\n\n  const { vaultAddress, vaultToken, recipientAddress, withdrawAmount } =\n    useEarnContext();\n\n  const analyticsData = useMemo(\n    () => ({\n      amount: Number(withdrawAmount) || Number(withdrawnAmount), // fall back to withdrawnAmount to avoid sending 0\n      address: recipientAddress ?? '',\n      tokenAddress: vaultToken?.address ?? '',\n      vaultAddress,\n    }),\n    [\n      withdrawAmount,\n      withdrawnAmount,\n      recipientAddress,\n      vaultToken?.address,\n      vaultAddress,\n    ],\n  );\n\n  useEffect(() => {\n    if (transactionState === 'buildingTransaction') {\n      successSent.current = false;\n      sendAnalytics(EarnEvent.EarnWithdrawInitiated, analyticsData);\n    }\n\n    if (transactionState === 'success' && !successSent.current) {\n      successSent.current = true;\n      sendAnalytics(EarnEvent.EarnWithdrawSuccess, analyticsData);\n    }\n\n    if (transactionState === 'error' && !errorSent.current) {\n      errorSent.current = true;\n      sendAnalytics(EarnEvent.EarnWithdrawFailure, analyticsData);\n    }\n  }, [transactionState, analyticsData, sendAnalytics]);\n\n  return {\n    setTransactionState,\n  };\n};\n"],"names":[],"mappings":";;;;AAMO,MAAM,uBAAuB,CAAC,oBAA4B;AAC/D,QAAM,CAAC,kBAAkB,mBAAmB,IAAI,SAE9C,IAAI;AACN,QAAM,cAAc,OAAO,KAAK;AAChC,QAAM,YAAY,OAAO,KAAK;AAC9B,QAAM,EAAE,cAAA,IAAkB,aAAA;AAE1B,QAAM,EAAE,cAAc,YAAY,kBAAkB,eAAA,IAClD,eAAA;AAEF,QAAM,gBAAgB;AAAA,IACpB,OAAO;AAAA,MACL,QAAQ,OAAO,cAAc,KAAK,OAAO,eAAe;AAAA;AAAA,MACxD,SAAS,oBAAoB;AAAA,MAC7B,eAAc,yCAAY,YAAW;AAAA,MACrC;AAAA,IAAA;AAAA,IAEF;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA,yCAAY;AAAA,MACZ;AAAA,IAAA;AAAA,EACF;AAGF,YAAU,MAAM;AACd,QAAI,qBAAqB,uBAAuB;AAC9C,kBAAY,UAAU;AACtB,oBAAc,UAAU,uBAAuB,aAAa;AAAA,IAC9D;AAEA,QAAI,qBAAqB,aAAa,CAAC,YAAY,SAAS;AAC1D,kBAAY,UAAU;AACtB,oBAAc,UAAU,qBAAqB,aAAa;AAAA,IAC5D;AAEA,QAAI,qBAAqB,WAAW,CAAC,UAAU,SAAS;AACtD,gBAAU,UAAU;AACpB,oBAAc,UAAU,qBAAqB,aAAa;AAAA,IAC5D;AAAA,EACF,GAAG,CAAC,kBAAkB,eAAe,aAAa,CAAC;AAEnD,SAAO;AAAA,IACL;AAAA,EAAA;AAEJ;"}