'use strict';

const ASSETS = [
// Styles
'.css', '.scss', '.sass', '.less',
// Images
'.svg', '.png', '.jpg', '.jpeg', '.gif', '.webp',
// Audio
'.ogg', '.mp3', '.mpe', '.mpeg', '.wav',
// Video
'.mp4', '.mov', '.avi', '.webm',
// Fonts
'.woff', '.woff2', '.ttf'];
const EXTENSIONS = ['.ts', '.tsx', '.cts', '.mts', '.js', '.jsx', '.cjs', '.mjs'];
const EXCLUDE = ['**/node_modules/**', '**/tests/**', '**/__fixtures__/**', '**/__mocks__/**', '**/__tests__/**', '**/*.(config|test|spec).*', '**/*-(test|spec).*'];

// Rust (swc) uses regex patterns
const EXCLUDE_RUST = ['node_modules', 'tests', '__fixtures__', '__mocks__', '__tests__', '\\.(config|test|spec)\\.[a-z]+$', '\\.(test|spec)\\.[a-z]+$'];

// https://reactnative.dev/docs/javascript-environment
// Based on browserslist: https://github.com/browserslist/browserslist
const NATIVE_TARGETS = {
  legacy: 'iOS 13',
  // 2019
  stable: 'iOS 14',
  // 2020
  current: 'iOS 15',
  // 2021
  experimental: 'iOS 16' // 2022
};

// Based on LTS schedule: https://nodejs.org/en/about/releases/
const NODE_SUPPORTED_VERSIONS = {
  legacy: '14.15.0',
  // LTS support started
  stable: '16.12.0',
  // ESM loader hooks
  current: '18.12.0',
  // LTS support started
  experimental: '19.0.0'
};
const NPM_SUPPORTED_VERSIONS = {
  legacy: '6.14.0',
  stable: '8.1.0',
  current: '8.19.0',
  experimental: '9.0.0'
};

// Based on browserslist: https://github.com/browserslist/browserslist
const BROWSER_TARGETS = {
  legacy: ['>=0.10%', 'not IE 11'],
  stable: ['defaults', 'not IE 11'],
  current: ['>=1%', 'not dead'],
  experimental: ['last 2 chrome versions', 'last 2 firefox versions']
};
const ELECTRON_TARGETS = {
  legacy: '7.0.0',
  // Oct 2019
  stable: '11.0.0',
  // Nov 2020
  current: '16.0.0',
  // Nov 2021
  experimental: '21.0.0' // Sep 2022
};
const SUPPORT_TO_ESM_SPEC = {
  legacy: 'es2018',
  stable: 'es2019',
  current: 'es2020',
  experimental: 'es2022'
};
const STATE_COLORS = {
  pending: 'muted',
  passed: 'success',
  failed: 'failure'
};
const DEFAULT_FORMATS = {
  browser: 'esm',
  electron: 'esm',
  native: 'lib',
  node: 'mjs'
};
const FORMATS_BROWSER = ['lib', 'esm', 'umd'];
const FORMATS_ELECTRON = ['lib', 'esm'];
const FORMATS_NATIVE = ['lib'];
const FORMATS_NODE = ['lib', 'mjs', 'cjs'];
const FORMATS = ['lib', 'esm', 'umd', 'mjs', 'cjs'];
const DEFAULT_INPUT = 'src/index.ts';
const DEFAULT_PLATFORM = 'browser';
const PLATFORMS = ['native', 'electron', 'node', 'browser'];
const DEFAULT_SUPPORT = 'stable';
const SUPPORTS = ['legacy', 'stable', 'current', 'experimental'];
const SUPPORT_PRIORITY = {
  legacy: 0,
  stable: 1,
  current: 2,
  experimental: 3
};
exports.ASSETS = ASSETS;
exports.BROWSER_TARGETS = BROWSER_TARGETS;
exports.DEFAULT_FORMATS = DEFAULT_FORMATS;
exports.DEFAULT_INPUT = DEFAULT_INPUT;
exports.DEFAULT_PLATFORM = DEFAULT_PLATFORM;
exports.DEFAULT_SUPPORT = DEFAULT_SUPPORT;
exports.ELECTRON_TARGETS = ELECTRON_TARGETS;
exports.EXCLUDE = EXCLUDE;
exports.EXCLUDE_RUST = EXCLUDE_RUST;
exports.EXTENSIONS = EXTENSIONS;
exports.FORMATS = FORMATS;
exports.FORMATS_BROWSER = FORMATS_BROWSER;
exports.FORMATS_ELECTRON = FORMATS_ELECTRON;
exports.FORMATS_NATIVE = FORMATS_NATIVE;
exports.FORMATS_NODE = FORMATS_NODE;
exports.NATIVE_TARGETS = NATIVE_TARGETS;
exports.NODE_SUPPORTED_VERSIONS = NODE_SUPPORTED_VERSIONS;
exports.NPM_SUPPORTED_VERSIONS = NPM_SUPPORTED_VERSIONS;
exports.PLATFORMS = PLATFORMS;
exports.STATE_COLORS = STATE_COLORS;
exports.SUPPORTS = SUPPORTS;
exports.SUPPORT_PRIORITY = SUPPORT_PRIORITY;
exports.SUPPORT_TO_ESM_SPEC = SUPPORT_TO_ESM_SPEC;
//# sourceMappingURL=constants.cjs.map
