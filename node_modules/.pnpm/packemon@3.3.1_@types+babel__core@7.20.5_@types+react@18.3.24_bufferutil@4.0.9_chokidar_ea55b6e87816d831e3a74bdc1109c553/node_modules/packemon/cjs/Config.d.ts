import { Blueprint, Schemas } from '@boost/common';
import { Configuration } from '@boost/config';
import { BuildParams, ConfigFile, ConfigMutator, ConfigMutatorWithBuild } from './types';
export declare class Config extends Configuration<ConfigFile> {
    blueprint({ bool, func }: Schemas): Blueprint<ConfigFile>;
    bootstrap(): void;
    wrapMutator<T>(prev?: ConfigMutator<T>, next?: ConfigMutator<T>): (options: T) => void;
    wrapBuildMutator<T>(prev?: ConfigMutatorWithBuild<T>, next?: ConfigMutatorWithBuild<T>): (options: T, build: BuildParams) => void;
}
//# sourceMappingURL=Config.d.ts.map