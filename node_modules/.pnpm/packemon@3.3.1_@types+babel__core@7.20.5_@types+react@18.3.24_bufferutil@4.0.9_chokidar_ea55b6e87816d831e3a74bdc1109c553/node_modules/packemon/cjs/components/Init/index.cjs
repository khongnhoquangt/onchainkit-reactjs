'use strict';

const react$1 = require('react');
const ink = require('ink');
const react = require('@boost/cli/react');
const PackageForm = require('./PackageForm.cjs');
const jsxRuntime = require('react/jsx-runtime');

/* eslint-disable react/jsx-no-literals */

function Init({
  packageName,
  onComplete
}) {
  const _react$useProgram = react.useProgram(),
    exit = _react$useProgram.exit;
  const handleSubmit = react$1.useCallback(config => {
    async function complete() {
      try {
        await onComplete(config);
      } catch (error) {
        exit(error);
      } finally {
        exit();
      }
    }
    void complete();
  }, [exit, onComplete]);
  return /*#__PURE__*/jsxRuntime.jsxs(ink.Box, {
    flexDirection: "column",
    children: [/*#__PURE__*/jsxRuntime.jsx(react.Header, {
      label: "Initializing package"
    }), /*#__PURE__*/jsxRuntime.jsx(ink.Box, {
      children: /*#__PURE__*/jsxRuntime.jsxs(ink.Text, {
        children: [/*#__PURE__*/jsxRuntime.jsx(ink.Text, {
          bold: true,
          children: "Package to configure: "
        }), /*#__PURE__*/jsxRuntime.jsx(react.Style, {
          type: "notice",
          children: packageName
        })]
      })
    }), /*#__PURE__*/jsxRuntime.jsx(ink.Box, {
      flexDirection: "column",
      marginTop: 1,
      children: /*#__PURE__*/jsxRuntime.jsx(PackageForm.PackageForm, {
        onSubmit: handleSubmit
      }, packageName)
    })]
  });
}
exports.Init = Init;
//# sourceMappingURL=index.cjs.map
