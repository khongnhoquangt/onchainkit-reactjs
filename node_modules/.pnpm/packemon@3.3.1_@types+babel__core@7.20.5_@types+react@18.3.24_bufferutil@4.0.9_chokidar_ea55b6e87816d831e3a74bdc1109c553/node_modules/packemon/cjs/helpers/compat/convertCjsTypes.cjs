'use strict';

const glob = require('fast-glob');
const fs = require('fs-extra');
const common = require('@boost/common');
const _interopDefault = e => e && e.__esModule ? e : {
  default: e
};
const glob__default = /*#__PURE__*/_interopDefault(glob);
const fs__default = /*#__PURE__*/_interopDefault(fs);
async function convertCjsTypes(cjsDir) {
  const dtsFiles = await glob__default.default(['**/*.d.ts', '**/*.d.ts.map'], {
    absolute: true,
    cwd: cjsDir.path()
  });
  await Promise.all(dtsFiles.map(async dtsFile => {
    const dtsPath = common.Path.create(dtsFile);
    const inName = dtsPath.name();
    const outName = inName.replace('.d.ts', '.d.cts');

    // Read contents and fix source map paths
    let contents = (await fs__default.default.readFile(dtsPath.path(), 'utf8')).replace(inName, outName);
    if (dtsFile.endsWith('.map')) {
      contents = contents.replace(inName.replace('.map', ''), outName.replace('.map', ''));
    }

    // Write the new file
    await fs__default.default.writeFile(dtsPath.parent().append(outName).path(), contents);

    // Delete the old file
    await fs__default.default.unlink(dtsPath.path());
  }));
}
exports.convertCjsTypes = convertCjsTypes;
//# sourceMappingURL=convertCjsTypes.cjs.map
