import { Command } from '@boost/cli';
import { InfraType, ScaffoldParams, TemplateType } from '../types';
export declare class ScaffoldCommand extends Command {
    force: boolean;
    packageManager: string;
    packagesFolder: string;
    skipInstall: boolean;
    template?: TemplateType;
    dest: string;
    destDir: string;
    run(dest: string): Promise<import("react/jsx-runtime").JSX.Element | undefined>;
    scaffold(params: ScaffoldParams): Promise<void>;
    scaffoldMonorepo(params: ScaffoldParams): Promise<void>;
    scaffoldMonorepoPackage(params: ScaffoldParams): Promise<void>;
    scaffoldPolyrepo(params: ScaffoldParams): Promise<void>;
    scaffoldPolyrepoPackage(params: ScaffoldParams): Promise<void>;
    addProjectReference(packagePath: string): Promise<void>;
    installDependencies(type: InfraType): Promise<void>;
    checkExistingInfrastructure(type: InfraType): Promise<void>;
    copyFile(fromTemplate: string, toDest: string, params: Record<string, number | string>): Promise<void>;
    copyFilesFromTemplate(template: string, destDir: string, params: Record<string, number | string> | ScaffoldParams): Promise<void[]>;
    loadJsonConfig<T>(filePath: string): Promise<T>;
}
//# sourceMappingURL=Scaffold.d.ts.map