import { Context } from './Context';
import { ParallelPipeline } from './ParallelPipeline';
import { AggregatedResult } from './types';
export declare class AggregatedPipeline<Ctx extends Context, Input = unknown, Output = Input> extends ParallelPipeline<{}, Ctx, Input, Output> {
    /**
     * Execute all work units in parallel with a value being passed to each work unit.
     * Work units will synchronize regardless of race conditions and errors.
     */
    run(): Promise<AggregatedResult<Output>>;
}
//# sourceMappingURL=AggregatedPipeline.d.ts.map