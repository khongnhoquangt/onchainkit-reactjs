import { BackendModule, Resource, ResourceKey } from 'i18next';
import { Contract, Path } from '@boost/common';
import { Blueprint, Schemas } from '@boost/common/optimal';
import { Format, Locale } from './types';
export interface FileBackendOptions {
    format?: Format;
    paths?: Path[];
}
export declare class FileBackend extends Contract<FileBackendOptions> implements BackendModule {
    fileCache: Map<Path, ResourceKey>;
    type: "backend";
    init(services: unknown, options: Partial<FileBackendOptions>): void;
    blueprint(schemas: Schemas): Blueprint<FileBackendOptions>;
    create(): void;
    read(locale: Locale, namespace: string, handler: (error: Error | null, resources: Resource) => void): ResourceKey;
}
//# sourceMappingURL=FileBackend.d.ts.map