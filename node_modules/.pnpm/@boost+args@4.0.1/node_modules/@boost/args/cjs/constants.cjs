'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

// Default values for option types.
const DEFAULT_BOOLEAN_VALUE = false;
const DEFAULT_NUMBER_VALUE = 0;
const DEFAULT_STRING_VALUE = '';

// Supports letters, numbers, dashes, and camel case.
// Minimum 2 characters. Must start and end with a letter.
const COMMAND_FORMAT = /^[a-z][-a-z0-9:]*[a-z]$/iu;

// Double dash followed by a long name.
// Supports letters, numbers, dashes, and camel case.
// Minimum 2 characters. Must start with a letter.
const LONG_OPTION_FORMAT = /^--[a-z][-a-z0-9]+$/iu;

// Single dash followed by a short name.
// Exactly 1 character.
const SHORT_OPTION_FORMAT = /^-[a-z]{1}$/iu;

// Single dash followed by N short names.
// Minimum 2 characters, otherwise its a single short option.
const SHORT_OPTION_GROUP_FORMAT = /^-[a-z]{2,}$/iu;

// Pattern to match all the above, with the addition
// of an inline value check.
const OPTION_LIKE = /^-{1,2}[a-z][-a-z0-9]*=?/iu;
exports.COMMAND_FORMAT = COMMAND_FORMAT;
exports.DEFAULT_BOOLEAN_VALUE = DEFAULT_BOOLEAN_VALUE;
exports.DEFAULT_NUMBER_VALUE = DEFAULT_NUMBER_VALUE;
exports.DEFAULT_STRING_VALUE = DEFAULT_STRING_VALUE;
exports.LONG_OPTION_FORMAT = LONG_OPTION_FORMAT;
exports.OPTION_LIKE = OPTION_LIKE;
exports.SHORT_OPTION_FORMAT = SHORT_OPTION_FORMAT;
exports.SHORT_OPTION_GROUP_FORMAT = SHORT_OPTION_GROUP_FORMAT;
//# sourceMappingURL=constants.cjs.map
