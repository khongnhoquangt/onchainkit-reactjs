'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
const ArgsError = require('../ArgsError.cjs');
const expandShortOption = require('./expandShortOption.cjs');

/* eslint-disable no-param-reassign */

/**
 * Expand a group of short option names to a list of long option names.
 */
function processShortOptionGroup(group, configs, options, map, loose) {
  [...group].forEach(short => {
    const name = expandShortOption.expandShortOption(short, map, loose);
    const config = configs[name];

    // Loose mode, always be a flag
    if (loose && !config) {
      options[name] = true;

      // Unknown option
    } else if (!config || config.type === 'string') {
      throw new ArgsError.ArgsError('GROUP_UNSUPPORTED_TYPE');

      // Boolean option, flag
    } else if (config.type === 'boolean') {
      options[name] = true;

      // Number option, counter
    } else if (config.type === 'number') {
      if (config.count) {
        options[name] = Number(options[name]) + 1;
      } else {
        throw new ArgsError.ArgsError('GROUP_REQUIRED_COUNT');
      }
    }
  });
}
exports.processShortOptionGroup = processShortOptionGroup;
//# sourceMappingURL=processShortOptionGroup.cjs.map
