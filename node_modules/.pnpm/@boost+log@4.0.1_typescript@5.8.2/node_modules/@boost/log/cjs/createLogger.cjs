'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
const common = require('@boost/common');
const constants = require('./constants.cjs');
const Logger = require('./Logger.cjs');
function pipeLog(logger, level) {
  return (...args) => {
    let metadata = {};
    let message = '';
    if (common.isObject(args[0])) {
      metadata = args.shift();
    }
    message = args.shift();
    logger.log({
      args,
      level,
      message,
      metadata
    });
  };
}

/**
 * Create and return a logger with any configured transports.
 */
function createLogger(options) {
  const logger = new Logger.Logger(options);
  const log = pipeLog(logger);
  constants.LOG_LEVELS.forEach(level => {
    Object.defineProperty(log, level, {
      value: pipeLog(logger, level)
    });
  });
  Object.defineProperty(log, 'disable', {
    value: () => {
      logger.disable();
    }
  });
  Object.defineProperty(log, 'enable', {
    value: () => {
      logger.enable();
    }
  });
  return log;
}
exports.createLogger = createLogger;
//# sourceMappingURL=createLogger.cjs.map
