declare const errors: {
    EXTENDS_ONLY_ROOT: string;
    EXTENDS_UNKNOWN_PATH: string;
    LOADER_UNSUPPORTED: string;
    PACKAGE_UNKNOWN_SCOPE: string;
    ROOT_INVALID: string;
    ROOT_INVALID_DIR: string;
    ROOT_NO_PACKAGE: string;
    ROOT_ONLY_OVERRIDES: string;
};
export type ConfigErrorCode = keyof typeof errors;
export declare const ConfigError: new (code: "EXTENDS_ONLY_ROOT" | "EXTENDS_UNKNOWN_PATH" | "LOADER_UNSUPPORTED" | "PACKAGE_UNKNOWN_SCOPE" | "ROOT_INVALID" | "ROOT_INVALID_DIR" | "ROOT_NO_PACKAGE" | "ROOT_ONLY_OVERRIDES", params?: unknown[] | undefined) => Error & import("@boost/internal").ScopedError<"EXTENDS_ONLY_ROOT" | "EXTENDS_UNKNOWN_PATH" | "LOADER_UNSUPPORTED" | "PACKAGE_UNKNOWN_SCOPE" | "ROOT_INVALID" | "ROOT_INVALID_DIR" | "ROOT_NO_PACKAGE" | "ROOT_ONLY_OVERRIDES">;
export {};
//# sourceMappingURL=ConfigError.d.ts.map