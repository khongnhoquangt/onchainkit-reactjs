import { Criteria, Options, Schema, SchemaState } from '../types';
/**
 * Require field array to not be empty.
 */
export declare function notEmpty<T>(state: SchemaState<T[]>, options?: Options): Criteria<T[]>;
/**
 * Require field array items to be of a specific schema type.
 * Will rebuild the array and type cast values.
 */
export declare function of<T>(state: SchemaState<T[]>, itemsSchema: Schema<T>): Criteria<T[]>;
/**
 * Require field array to be of a specific size.
 */
export declare function sizeOf<T>(state: SchemaState<T[]>, size: number, options?: Options): Criteria<T[]>;
//# sourceMappingURL=arrays.d.ts.map