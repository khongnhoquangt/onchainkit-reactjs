'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
const constants = require('../constants.cjs');
const registerOption = require('./registerOption.cjs');

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function createOptionInitializer(config) {
  const initializer = {
    [constants.INTERNAL_INITIALIZER]: true,
    register(target, property) {
      registerOption.registerOption(target, property, config);
    },
    value: config.default
  };

  // We are being very tricky here! Initializers actually return an object (above)
  // that registers the option when the command is instantiated, instead of
  // returning the actual primitive value. We do this so that consumers are typed
  // correctly, but don't fret, we set the correct value after instantiation.
  return initializer;
}
exports.createOptionInitializer = createOptionInitializer;
//# sourceMappingURL=createOptionInitializer.cjs.map
