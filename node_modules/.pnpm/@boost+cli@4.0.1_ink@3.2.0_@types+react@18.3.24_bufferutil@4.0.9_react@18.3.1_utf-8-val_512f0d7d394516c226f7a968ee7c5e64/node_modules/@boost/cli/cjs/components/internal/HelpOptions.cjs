'use strict';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
Object.defineProperty(exports, '__esModule', {
  value: true
});
const React = require('react');
const ink = require('ink');
const terminal = require('@boost/terminal');
const constants = require('../../constants.cjs');
require('../../helpers/index.cjs');
const translate = require('../../translate.cjs');
const Header = require('../Header.cjs');
const Style = require('../Style.cjs');
const formatType = require('../../helpers/formatType.cjs');
const groupByCategory = require('../../helpers/groupByCategory.cjs');
const formatDescription = require('../../helpers/formatDescription.cjs');
const _interopDefault = e => e && e.__esModule ? e : {
  default: e
};
const React__default = /*#__PURE__*/_interopDefault(React);
function gatherOptionTags(config) {
  const tags = [];
  if (config.count) {
    tags.push(translate.msg('cli:tagCount'));
  }
  if (config.multiple) {
    tags.push(translate.msg('cli:tagMultiple') + (config.arity ? `(${config.arity})` : ''));
  }
  return tags;
}
function HelpOptions({
  categories,
  options
}) {
  const longWidth = React.useRef(0);
  const shortWidth = React.useRef(0);
  const items = React.useMemo(() => Object.entries(options).map(([name, option]) => {
    const shortLabel = option.short ? `-${option.short},` : '';
    let longLabel = `--${option.default === true ? 'no-' : ''}${name}`;
    if (option.type !== 'boolean') {
      longLabel += ' ';
      longLabel += formatType.formatType(option);
    }
    const longLabelStripped = terminal.stripAnsi(longLabel);
    const shortLabelStripped = terminal.stripAnsi(shortLabel);
    if (longLabelStripped.length > longWidth.current) {
      longWidth.current = longLabelStripped.length;
    }
    if (shortLabelStripped.length > shortWidth.current) {
      shortWidth.current = shortLabelStripped.length;
    }
    return _objectSpread(_objectSpread({}, option), {}, {
      longLabel,
      name,
      shortLabel
    });
  }), [options]);
  const categorizedOptions = React.useMemo(() => groupByCategory.groupByCategory(items, categories ?? {}), [categories, items]);
  const categoryCount = Object.keys(categorizedOptions).length;
  const showShortColumn = shortWidth.current > 0;
  return /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, /*#__PURE__*/React__default.default.createElement(Header.Header, {
    label: translate.msg('cli:labelOptions')
  }), Object.entries(categorizedOptions).map(([key, category], index) => /*#__PURE__*/React__default.default.createElement(ink.Box, {
    key: key,
    flexDirection: "column"
  }, !!category.name && categoryCount > 1 && /*#__PURE__*/React__default.default.createElement(ink.Box, {
    marginTop: index === 0 ? 0 : constants.SPACING_ROW,
    paddingLeft: constants.SPACING_COL
  }, /*#__PURE__*/React__default.default.createElement(Style.Style, {
    bold: true,
    type: "none"
  }, category.name)), category.items.map(config => /*#__PURE__*/React__default.default.createElement(ink.Box, {
    key: key + config.name,
    flexDirection: "row",
    paddingLeft: constants.SPACING_COL
  }, showShortColumn && /*#__PURE__*/React__default.default.createElement(ink.Box, {
    flexGrow: 0,
    width: shortWidth.current + constants.SPACING_COL
  }, /*#__PURE__*/React__default.default.createElement(ink.Text, null, config.shortLabel)), /*#__PURE__*/React__default.default.createElement(ink.Box, {
    flexGrow: 0,
    width: longWidth.current + constants.SPACING_COL_WIDE
  }, /*#__PURE__*/React__default.default.createElement(ink.Text, null, config.longLabel)), /*#__PURE__*/React__default.default.createElement(ink.Box, {
    flexGrow: 1
  }, /*#__PURE__*/React__default.default.createElement(ink.Text, {
    wrap: "wrap"
  }, formatDescription.formatDescription(config, gatherOptionTags(config)))))))));
}
exports.HelpOptions = HelpOptions;
//# sourceMappingURL=HelpOptions.cjs.map
