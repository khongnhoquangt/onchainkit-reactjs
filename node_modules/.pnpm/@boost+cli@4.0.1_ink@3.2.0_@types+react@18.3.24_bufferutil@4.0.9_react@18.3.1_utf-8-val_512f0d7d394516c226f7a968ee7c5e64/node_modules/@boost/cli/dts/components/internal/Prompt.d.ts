import React from 'react';
import { Key } from 'ink';
export type KeyInput = Key;
export interface PromptProps<T> {
    /** Label to display before or above the prompt itself. */
    label: NonNullable<React.ReactNode>;
    /** Single character symbol to display before the label. Defaults to "?"". */
    prefix?: string;
    /** Callback triggered when the value is submitted. */
    onSubmit: (value: T) => void;
    /** Function to validate the value on submit. To trigger a failed state, thrown an `Error`. */
    validate?: (value: T) => void;
}
export interface InternalPromptProps<T> extends Omit<PromptProps<T>, 'onSubmit'> {
    afterLabel?: React.ReactNode;
    beforeLabel?: React.ReactNode;
    children?: React.ReactNode;
    focused?: boolean;
    onBackspace?: (key: KeyInput) => void;
    onDelete?: (key: KeyInput) => void;
    onEscape?: (key: KeyInput) => void;
    onInput?: (value: string, key: KeyInput) => boolean | void;
    onKeyDown?: (key: KeyInput) => void;
    onKeyLeft?: (key: KeyInput) => void;
    onKeyRight?: (key: KeyInput) => void;
    onKeyUp?: (key: KeyInput) => void;
    onPageDown?: (key: KeyInput) => void;
    onPageUp?: (key: KeyInput) => void;
    onReturn?: () => boolean | void;
    onSpace?: (key: KeyInput) => void;
    onTab?: (key: KeyInput) => void;
    value: T | null;
}
export declare function Prompt<T>({ afterLabel, beforeLabel, children, focused, label, onBackspace, onDelete, onEscape, onInput, onKeyDown, onKeyLeft, onKeyRight, onKeyUp, onPageDown, onPageUp, onReturn, onSpace, onTab, prefix, validate, value, }: InternalPromptProps<T>): JSX.Element;
//# sourceMappingURL=Prompt.d.ts.map