import React from 'react';
import { PromptProps } from './internal/Prompt';
import { ScrollableListProps } from './internal/ScrollableList';
export type SelectOptionLike<T> = {
    divider: boolean;
    label?: NonNullable<React.ReactNode>;
} | {
    label: NonNullable<React.ReactNode>;
    value: T;
};
export interface SelectOption<T> {
    divider: boolean;
    index: number;
    label: NonNullable<React.ReactNode>;
    value: T | null;
}
export interface SelectProps<T, V = T> extends PromptProps<T>, ScrollableListProps {
    /** Option value selected by default. */
    defaultSelected?: T;
    /** List of options to choose from. Can either be a string, number, or object with a `label` and `value`. */
    options: (SelectOptionLike<V> | V)[];
}
export declare function normalizeOptions<T>(options: SelectProps<unknown>['options']): SelectOption<T>[];
/**
 * A React component that renders a select menu with options, where a single option can be seleted.
 * Options can be navigated with arrow keys, selected with "space", and submitted with "enter".
 */
export declare function Select<T = string>(props: SelectProps<T>): JSX.Element;
//# sourceMappingURL=Select.d.ts.map